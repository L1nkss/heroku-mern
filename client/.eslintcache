[{"C:\\repos\\l1nks-movie-app\\client\\src\\index.tsx":"1","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\store.ts":"2","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\history.ts":"3","C:\\repos\\l1nks-movie-app\\client\\src\\routes\\routes.tsx":"4","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\sagas\\sagas.ts":"5","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\rootReducer.ts":"6","C:\\repos\\l1nks-movie-app\\client\\src\\constants\\constants.ts":"7","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\app.tsx":"8","C:\\repos\\l1nks-movie-app\\client\\src\\components\\error\\error.tsx":"9","C:\\repos\\l1nks-movie-app\\client\\src\\components\\not-found\\not-found.tsx":"10","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\app\\reduser.ts":"11","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\reducer.ts":"12","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\saga\\saga.ts":"13","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\user\\reducer.ts":"14","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\saga\\saga.ts":"15","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\reducer.ts":"16","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\selectors\\selectors.ts":"17","C:\\repos\\l1nks-movie-app\\client\\src\\routes\\content.tsx":"18","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loader\\loader.tsx":"19","C:\\repos\\l1nks-movie-app\\client\\src\\components\\header\\header.tsx":"20","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\helpers.ts":"21","C:\\repos\\l1nks-movie-app\\client\\src\\services\\api.ts":"22","C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-details\\film-details.tsx":"23","C:\\repos\\l1nks-movie-app\\client\\src\\components\\main\\main.tsx":"24","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loginForm\\loginForm.tsx":"25","C:\\repos\\l1nks-movie-app\\client\\src\\components\\registerForm\\registerForm.tsx":"26","C:\\repos\\l1nks-movie-app\\client\\src\\components\\menu\\menu.tsx":"27","C:\\repos\\l1nks-movie-app\\client\\src\\components\\content\\content.tsx":"28","C:\\repos\\l1nks-movie-app\\client\\src\\components\\films\\films.tsx":"29","C:\\repos\\l1nks-movie-app\\client\\src\\components\\search\\search.tsx":"30","C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-card\\film-card.tsx":"31","C:\\repos\\l1nks-movie-app\\client\\src\\components\\private-route\\private-route.tsx":"32","C:\\repos\\l1nks-movie-app\\client\\src\\components\\popup\\popup.tsx":"33","C:\\repos\\l1nks-movie-app\\client\\src\\components\\redirect-login\\redirect-login.tsx":"34","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\adapters\\film.ts":"35","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\adapters\\reviews.ts":"36","C:\\repos\\l1nks-movie-app\\client\\src\\components\\review-list\\review-list.tsx":"37","C:\\repos\\l1nks-movie-app\\client\\src\\components\\review-list\\component\\review.tsx":"38"},{"size":496,"mtime":1611409233438,"results":"39","hashOfConfig":"40"},{"size":520,"mtime":1611409233439,"results":"41","hashOfConfig":"40"},{"size":114,"mtime":1609703378370,"results":"42","hashOfConfig":"40"},{"size":605,"mtime":1611409233439,"results":"43","hashOfConfig":"40"},{"size":263,"mtime":1611409233439,"results":"44","hashOfConfig":"40"},{"size":359,"mtime":1611409233438,"results":"45","hashOfConfig":"40"},{"size":1353,"mtime":1611846024175,"results":"46","hashOfConfig":"40"},{"size":2241,"mtime":1611423500706,"results":"47","hashOfConfig":"40"},{"size":147,"mtime":1611409233438,"results":"48","hashOfConfig":"40"},{"size":149,"mtime":1611409233438,"results":"49","hashOfConfig":"40"},{"size":394,"mtime":1611409233438,"results":"50","hashOfConfig":"40"},{"size":1649,"mtime":1611409233438,"results":"51","hashOfConfig":"40"},{"size":792,"mtime":1611833782392,"results":"52","hashOfConfig":"40"},{"size":1806,"mtime":1611517259652,"results":"53","hashOfConfig":"40"},{"size":3275,"mtime":1611998137458,"results":"54","hashOfConfig":"40"},{"size":1435,"mtime":1611409233438,"results":"55","hashOfConfig":"40"},{"size":505,"mtime":1611409233438,"results":"56","hashOfConfig":"40"},{"size":719,"mtime":1611768615359,"results":"57","hashOfConfig":"40"},{"size":401,"mtime":1611409233438,"results":"58","hashOfConfig":"40"},{"size":3928,"mtime":1611767927350,"results":"59","hashOfConfig":"40"},{"size":363,"mtime":1611409233439,"results":"60","hashOfConfig":"40"},{"size":1372,"mtime":1611577205963,"results":"61","hashOfConfig":"40"},{"size":5622,"mtime":1612123964311,"results":"62","hashOfConfig":"40"},{"size":1424,"mtime":1611409233438,"results":"63","hashOfConfig":"40"},{"size":2568,"mtime":1611495210133,"results":"64","hashOfConfig":"40"},{"size":2963,"mtime":1611767298863,"results":"65","hashOfConfig":"40"},{"size":596,"mtime":1609703370883,"results":"66","hashOfConfig":"40"},{"size":3308,"mtime":1611837674763,"results":"67","hashOfConfig":"40"},{"size":1974,"mtime":1611838195449,"results":"68","hashOfConfig":"40"},{"size":678,"mtime":1611409233438,"results":"69","hashOfConfig":"40"},{"size":1782,"mtime":1611576371221,"results":"70","hashOfConfig":"40"},{"size":646,"mtime":1611757273358,"results":"71","hashOfConfig":"40"},{"size":1111,"mtime":1611837321930,"results":"72","hashOfConfig":"40"},{"size":169,"mtime":1611757216866,"results":"73","hashOfConfig":"40"},{"size":1598,"mtime":1611997946849,"results":"74","hashOfConfig":"40"},{"size":496,"mtime":1612000050769,"results":"75","hashOfConfig":"40"},{"size":603,"mtime":1612032468612,"results":"76","hashOfConfig":"40"},{"size":657,"mtime":1612123684606,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1oio6kb",{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"81"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"81"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"81"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"81"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\repos\\l1nks-movie-app\\client\\src\\index.tsx",["177"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/app/app\";\nimport history from \"./utils/history\";\n\nimport store from \"./redux/store\";\nimport \"./style/style.scss\";\nimport { AppRoutes } from \"./routes/routes\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <AppRoutes />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n",["178","179","180","181","182","183","184"],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\store.ts",["185","186"],"import {\n  configureStore, Action, getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas/sagas\";\n\nimport rootReducer, { RootState } from \"./reducers/rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware({ thunk: false }), sagaMiddleware],\n});\n\nexport type AppDispatch = typeof store.dispatch;\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\history.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\routes\\routes.tsx",["187"],"import {\n  Switch, Route, Redirect,\n} from \"react-router-dom\";\nimport { RoutePathes } from \"../constants/constants\";\nimport App from \"../components/app/app\";\nimport ErrorPage from \"../components/error/error\";\nimport NotFound from \"../components/not-found/not-found\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const AppRoutes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path={RoutePathes.ERROR} exact component={ErrorPage} />\n      <Route path={RoutePathes.ROOT} component={App} />\n      <Route path={RoutePathes.NOT_FOUND} component={NotFound} />\n    </Switch>\n  );\n};\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\sagas\\sagas.ts",["188"],"import { all } from \"redux-saga/effects\";\nimport watchGenreSaga from \"../reducers/genre/saga/saga\";\nimport watchFilmsSaga from \"../reducers/films/saga/saga\";\n\nexport default function* rootSaga() {\n  yield all([\n    watchGenreSaga(),\n    watchFilmsSaga(),\n  ]);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\rootReducer.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\constants\\constants.ts",["189"],"export const RoutePathes = {\n  ROOT: \"/\",\n  ERROR: \"/error\",\n  FILM_DETAILS: \"/film-details\",\n  NOT_FOUND: \"/not-found\",\n  REDIRECT_LOGIN: \"/redirect-login\",\n  USER_FAVORITE_FILMS: \"/user-favorite-films\",\n};\n\nexport const ENDPOINTS = {\n  registration: \"api/auth/signup\",\n  login: \"api/auth/signin\",\n  checkToken: \"/api/checkToken\",\n};\n\nexport const GENRE_TYPE_ALL = [\n  {\n    id: 63467,\n    name: \"All\",\n  },\n];\n\nexport const REGULARS = {\n  SEARCH_YEAR: \"^\\\\d{4}\",\n};\n\nexport const CONSTANT_GENRES = [\n  {\n    id: 6542,\n    name: \"Now playing\",\n  },\n  {\n    id: 5655,\n    name: \"Popular\",\n  },\n  {\n    id: 6571,\n    name: \"Top Rated\",\n  },\n  {\n    id: 7823,\n    name: \"Upcoming\",\n  },\n];\n\nexport const YOUTUBE_LINK = \"https://www.youtube.com/embed/\";\n\n// список жанров для получения данных с сервера\nexport const GENRES_TYPES_TO_SERVER = {\n  [CONSTANT_GENRES[0].name]: \"now_playing\",\n  [CONSTANT_GENRES[1].name]: \"popular\",\n  [CONSTANT_GENRES[2].name]: \"top_rated\",\n  [CONSTANT_GENRES[3].name]: \"upcoming\",\n};\n\nconst CORS_URL = \"https://cors-anywhere.herokuapp.com/\";\n\n// export const IMAGE_URL = \"https://image.tmdb.org/t/p/w342/\";\n\nexport const IMAGE_SIZE_URL = {\n  SMALL: \"https://image.tmdb.org/t/p/w342/\",\n  BIG: \"https://image.tmdb.org/t/p/w1280/\",\n};\n\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\app.tsx",["190","191","192"],"import React, { memo, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"../header/header\";\nimport Main from \"../main/main\";\nimport Loader from \"../loader/loader\";\nimport { getGenresRequest } from \"../../redux/reducers/genre/reducer\";\nimport {\n  getUserDataRequest, getUserDataSuccess, getUserDataNoUser,\n} from \"../../redux/reducers/user/reducer\";\nimport { getFilmsRequest } from \"../../redux/reducers/films/reducer\";\nimport { ENDPOINTS } from \"../../constants/constants\";\nimport { isFetchingDone } from \"./selectors/selectors\";\nimport { ContentRoutes } from \"../../routes/content\";\n\nconst App: React.FC = () => {\n  const [isUserAuthChecked, setUserAuthStatus] = useState(false);\n  const dispatch = useDispatch();\n  const isDataLoaded = useSelector(isFetchingDone);\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      dispatch(getUserDataRequest()); // загружаем информацию о пользователе\n      try {\n        const response = await axios.get(ENDPOINTS.checkToken);\n        if (response.status === 200) {\n          const {\n            username, email, id, favoriteFilms,\n          } = response.data;\n          dispatch(getUserDataSuccess({\n            username, email, id, favoriteFilms,\n          }));\n        }\n      } catch (e) {\n        if (e.response.status === 401) {\n          dispatch(getUserDataNoUser());\n        }\n      } finally {\n        setUserAuthStatus(true);\n      }\n    };\n    dispatch(getGenresRequest()); // загружаем жанры\n    dispatch(getFilmsRequest()); // Загружаем фильмы\n    checkAuthStatus(); // проверяем статус авторизацияя\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {\n        // Проверяем, что данные загрузились с сервера и информация о пользователе получена\n        isDataLoaded && isUserAuthChecked\n          ? (\n            <>\n              <Header />\n              <ContentRoutes />\n            </>\n          )\n          : <Loader />\n      }\n    </div>\n  );\n};\n\nexport default memo(App);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\error\\error.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\not-found\\not-found.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\app\\reduser.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\reducer.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\saga\\saga.ts",["193"],"import { put, call, takeEvery } from \"redux-saga/effects\";\nimport { getGenresRequest, getGenresSuccess, getGenresError } from \"../reducer\";\nimport api from \"../../../../services/api\";\nimport { GENRE_TYPE_ALL, RoutePathes } from \"../../../../constants/constants\";\nimport history from \"../../../../utils/history\";\n\nfunction* getGenres() {\n  try {\n    const response = yield call(api.getGenres);\n    // добавляем жанры с сервера + константное значение для всех фильмов\n    yield put(getGenresSuccess([...GENRE_TYPE_ALL, ...response.data.genres]));\n  } catch (e) {\n    yield put(getGenresError());\n    history.push(RoutePathes.ERROR);\n  }\n}\n\nexport default function* watchGenreSaga() {\n  yield takeEvery(getGenresRequest.type, getGenres);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\user\\reducer.ts",["194","195","196"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\nimport { IInitialUserState, TUserData } from \"./types/types\";\nimport { TUserFavoriteFilms } from \"../../../../../server/src/models/user\";\n\nconst defaultUserData = {\n  username: \"\",\n  email: \"\",\n  id: \"\",\n  favoriteFilms: [],\n};\n\nconst initialState: IInitialUserState = {\n  isLogin: false,\n  loading: false,\n  data: defaultUserData,\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getUserDataRequest(state: IInitialUserState) {\n      return { ...state, loading: true };\n    },\n    getUserDataSuccess(state: IInitialUserState, action: PayloadAction<TUserData>) {\n      return {\n        ...state, loading: false, isLogin: true, data: action.payload,\n      };\n    },\n    setUserData(state: IInitialUserState, action: PayloadAction<TUserData>): void {\n      state.data = action.payload;\n      state.isLogin = true;\n    },\n    // Возможно можно сделать проще через setUserData и передачу пустого экшена\n    setUserDataToDefault(state: IInitialUserState): void {\n      state.data = defaultUserData;\n      state.isLogin = false;\n    },\n    setLoginStatus(state: IInitialUserState, action: PayloadAction<boolean>) {\n      return { ...state, isLogin: action.payload };\n    },\n    getUserDataNoUser(state: IInitialUserState) {\n      return { ...state, loading: false };\n    },\n    addFavoriteFilm(state: IInitialUserState, action: PayloadAction<any>) {\n      return { ...state, data: { ...state.data, favoriteFilms: action.payload } };\n    },\n  },\n});\n\nexport const {\n  setUserData, setUserDataToDefault, setLoginStatus, getUserDataRequest, getUserDataSuccess, getUserDataNoUser, addFavoriteFilm,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\saga\\saga.ts",["197","198","199","200"],"import {\n  put, call, takeEvery, select,\n} from \"redux-saga/effects\";\nimport {\n  getFilmsRequest, getFilmsSuccess, loadAdditionFilmsSuccess, loadAdditionFilmsRequest,\n} from \"../reducer\";\nimport { changeCategory, changeActiveGenre } from \"../../genre/reducer\";\nimport { IRootState } from \"../../types/types\";\nimport { GENRES_TYPES_TO_SERVER } from \"../../../../constants/constants\";\nimport api from \"../../../../services/api\";\nimport FilmAdapter from \"../../../../utils/adapters/film\";\nimport { isStringsEqual } from \"../../../../utils/helpers\";\n\nconst getActiveCategory = (state: IRootState) => state.genres.category;\nconst getActiveGenre = (state: IRootState) => state.genres.active;\nconst getActiveGenreId = (state: IRootState) => {\n  const allGenres = state.genres.list;\n  const activeGenre = state.genres.active;\n  const idx = allGenres.findIndex((genre) => isStringsEqual(genre.name, activeGenre));\n\n  return allGenres[idx].id;\n};\n\nconst getTotalPages = (state: IRootState) => state.films.totalPages;\nconst getCurrentPage = (state: IRootState) => state.films.page;\n\n// Сага для запуска обновления фильмов, если изменился жанр\nfunction* getFilmsWhenGenreUpdated() {\n  try {\n    yield put(getFilmsRequest());\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\n// Сага для загрузки большего количество фильмов\nfunction* getAdditionFilms() {\n  try {\n    let response;\n    const totalPages = yield select(getTotalPages);\n    const currentPage = yield select(getCurrentPage);\n    const activeGenre = yield select(getActiveGenre);\n\n    if (currentPage + 1 <= totalPages) {\n      if (isStringsEqual(activeGenre, \"all\")) {\n        const activeCategory = yield select(getActiveCategory);\n        response = yield call(api.getFilms, GENRES_TYPES_TO_SERVER[activeCategory], {\n          page: currentPage + 1,\n        });\n      } else {\n        const activeGenreId = yield select(getActiveGenreId);\n        response = yield call(api.discoverFilms, { with_genres: activeGenreId, page: currentPage + 1 });\n      }\n      yield put(loadAdditionFilmsSuccess({\n        films: FilmAdapter.transformData(response.data.results),\n      }));\n    }\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\nfunction* getFilms() {\n  try {\n    let response;\n    const activeGenre = yield select(getActiveGenre);\n    if (isStringsEqual(activeGenre, \"all\")) {\n      const activeCategory = yield select(getActiveCategory);\n      response = yield call(api.getFilms, GENRES_TYPES_TO_SERVER[activeCategory]);\n    } else {\n      const activeGenreId = yield select(getActiveGenreId);\n      response = yield call(api.discoverFilms, { with_genres: activeGenreId });\n    }\n    yield put(getFilmsSuccess({\n      films: FilmAdapter.transformData(response.data.results),\n      page: response.data.page,\n      totalPages: response.data.total_pages,\n    }));\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\nexport default function* watchFilmsSaga() {\n  yield takeEvery(getFilmsRequest.type, getFilms);\n  yield takeEvery(changeCategory.type, getFilmsWhenGenreUpdated);\n  yield takeEvery(changeActiveGenre.type, getFilmsWhenGenreUpdated);\n  yield takeEvery(loadAdditionFilmsRequest.type, getAdditionFilms);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\reducer.ts",["201","202"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\nimport { IClientFilmData } from \"./types/types\";\n\nexport interface IFilmState {\n  films: Array<IClientFilmData>,\n  loading: boolean,\n  error: boolean\n  page: number,\n  totalPages: number,\n  loadingAdditionFilms: boolean,\n  isSearching: boolean\n}\n\nconst initialState: IFilmState = {\n  films: [],\n  loading: false,\n  error: false,\n  page: 1,\n  totalPages: 1,\n  loadingAdditionFilms: false,\n  isSearching: false,\n};\n\nconst filmsSlice = createSlice({\n  name: \"films\",\n  initialState,\n  reducers: {\n    getFilmsRequest(state) {\n      return { ...state, loading: true, error: false };\n    },\n    getFilmsSuccess(state, action) {\n      const { totalPages, page, films } = action.payload;\n      return {\n        ...state, loading: false, films, page, totalPages,\n      };\n    },\n    loadAdditionFilmsRequest(state) {\n      return { ...state, loadingAdditionFilms: true };\n    },\n    loadAdditionFilmsSuccess(state, action) {\n      return {\n        ...state, films: [...state.films, ...action.payload.films], page: state.page + 1, loadingAdditionFilms: false,\n      };\n    },\n    changeSearchStatus(state, action) {\n      return { ...state, isSearching: action.payload };\n    },\n  },\n});\n\nexport const {\n  getFilmsRequest, getFilmsSuccess, loadAdditionFilmsSuccess, loadAdditionFilmsRequest, changeSearchStatus,\n} = filmsSlice.actions;\n\nexport default filmsSlice.reducer;\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\selectors\\selectors.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\routes\\content.tsx",["203","204","205"],"import { Redirect, Route, Switch } from \"react-router-dom\";\nimport { RoutePathes } from \"../constants/constants\";\nimport FilmDetails from \"../components/film-details/film-details\";\nimport Main from \"../components/main/main\";\nimport PrivateRoute from \"../components/private-route/private-route\";\nimport RedirectLogin from \"../components/redirect-login/redirect-login\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const ContentRoutes: React.FC = () => {\n  return (\n    <>\n      <Route path={`${RoutePathes.FILM_DETAILS}/:id?`} exact component={FilmDetails} />\n      <Route path={RoutePathes.REDIRECT_LOGIN} component={RedirectLogin} />\n      <Route path=\"/\" exact component={Main} />\n    </>\n  );\n};\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loader\\loader.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\header\\header.tsx",["206","207","208","209"],"import React, { memo, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport Menu from \"../menu/menu\";\nimport LoginForm from \"../loginForm/loginForm\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\nimport { setUserDataToDefault } from \"../../redux/reducers/user/reducer\";\nimport RegisterForm from \"../registerForm/registerForm\";\nimport Popup from \"../popup/popup\";\n\n/*\n todo\n не очень красиво с formToShow, исправить по возможности выбор контента для Popup'a\n */\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const [showPopup, setShowPopup] = useState(false);\n  const [formToShow, setFormToShow] = useState(\"\");\n  const isLogin = useSelector((state: IRootState) => state.user.isLogin);\n  const userName = useSelector((state: IRootState) => state.user.data.username);\n\n  const togglePopupStatus = () => {\n    setShowPopup((prevState) => !prevState);\n  };\n\n  const toggleButtonsClick = () => {\n    if (formToShow === \"login\") return <LoginForm successCb={togglePopupStatus} />;\n    if (formToShow === \"registration\") return <RegisterForm successCb={togglePopupStatus} />;\n    return <></>;\n  };\n  const userMenuActions = [\n    {\n      label: \"Избранные фильмы\",\n      callback: () => console.log(\"Колбэк с фильмами\"),\n      key: 3,\n    },\n    {\n      label: \"Настройки\",\n      callback: () => console.log(\"Колбэк с настройкой\"),\n      key: 1,\n    },\n    {\n      label: \"Выйти\",\n      callback: async () => {\n        try {\n          const response = await axios.post(\"/api/logout\");\n          if (response.status === 200) {\n            dispatch(setUserDataToDefault());\n          }\n        } catch (e) {\n          console.log(\"Ошибка\", e);\n        }\n      },\n      key: 2,\n    },\n  ];\n  const authButtons = useMemo(() => {\n    return (\n      <>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            setFormToShow(\"login\");\n            togglePopupStatus();\n          }}\n        >\n          Логин\n        </button>\n        <button\n          className=\"button button--orange\"\n          type=\"button\"\n          onClick={() => {\n            setFormToShow(\"registration\");\n            togglePopupStatus();\n          }}\n        >\n          Регистрация\n        </button>\n      </>\n    );\n  }, []);\n\n  const userProfile = useMemo(() => {\n    return (\n      <div className=\"header__user-menu\">\n        <h3 className=\"header__user-name\">\n          {userName}\n          <Menu\n            className=\"header__dropdown\"\n            render={(className: string) => {\n              return userMenuActions.map((element) => {\n                return (\n                  <li\n                    role=\"presentation\"\n                    key={element.key}\n                    onKeyDown={element.callback}\n                    onClick={element.callback}\n                    className={className}\n                  >\n                    {element.label}\n                  </li>\n                );\n              });\n            }}\n          />\n        </h3>\n      </div>\n    );\n  }, [userName]);\n  return (\n    <header className=\"header\">\n      <div className=\"content-wrapper header__content\">\n        <h1 className=\"header__title\">\n          <Link to=\"/\">The movie pet project</Link>\n          <p className=\"header__source-link\">\n            provided by\n            <a href=\"https://www.themoviedb.org/?language=en\" rel=\"noreferrer\" target=\"_blank\"> TMD</a>\n          </p>\n        </h1>\n        <>\n          {isLogin ? userProfile : authButtons}\n        </>\n      </div>\n      { showPopup && <Popup handleCloseClick={togglePopupStatus}>{toggleButtonsClick()}</Popup>}\n    </header>\n  );\n};\n\nexport default memo(Header);\n","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\helpers.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\services\\api.ts",["210","211"],"import axios, { AxiosInstance } from \"axios\";\nimport dotenv from \"dotenv\";\nimport { BASE_URL } from \"../constants/constants\";\n\ndotenv.config();\nclass Api {\n  private token: string | undefined;\n\n  private url: string;\n\n  client: AxiosInstance | null;\n\n  constructor(url: string, token: string | undefined) {\n    this.token = token;\n    this.client = null;\n    this.url = url;\n  }\n\n  init = () => {\n    const headers: any = {\n      Accept: \"application/json\",\n    };\n\n    if (this.token) {\n      headers.Authorization = `Bearer ${this.token}`;\n    }\n\n    this.client = axios.create({\n      baseURL: this.url,\n      timeout: 31000,\n      withCredentials: false,\n      headers,\n    });\n\n    return this.client;\n  };\n\n  getGenres = (params = {}) => {\n    return this.init().get(\"/genre/movie/list\");\n  };\n\n  getFilms = (type: string, params = {}) => {\n    return this.init().get(`/movie/${type}`, {\n      params,\n    });\n  };\n\n  getDetails = (id: string) => {\n    return this.init().get(`/movie/${id}`);\n  };\n\n  getReviews = (id:string) => {\n    return this.init().get(`/movie/${id}/reviews`);\n  };\n\n  getVideo = (id: string) => {\n    return this.init().get(`/movie/${id}/videos`);\n  };\n\n  discoverFilms = (params = {}) => {\n    return this.init().get(\"/discover/movie\", {\n      params,\n    });\n  };\n}\n\nexport default new Api(\n  BASE_URL,\n  process.env.REACT_APP_API_TOKEN,\n);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-details\\film-details.tsx",["212","213","214","215","216","217","218","219","220"],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\main\\main.tsx",["221"],"import React, { memo, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Menu from \"../menu/menu\";\nimport Content from \"../content/content\";\nimport { isStringsEqual } from \"../../utils/helpers\";\nimport { TGenre } from \"../../redux/reducers/genre/types/types\";\nimport { changeActiveGenre } from \"../../redux/reducers/genre/reducer\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\n\nconst Main: React.FC = () => {\n  const dispatch = useDispatch();\n  const genres = useSelector((state: IRootState) => state.genres.list);\n  const activeGenre = useSelector((state: IRootState) => state.genres.active);\n\n  const handleGenreClick = useCallback((genre: TGenre) => {\n    if (isStringsEqual(genre.name, activeGenre)) return;\n\n    dispatch(changeActiveGenre(genre.id));\n  }, [activeGenre]);\n  return (\n    <main className=\"main content-wrapper\">\n      <Menu\n        className=\"genre-list\"\n        render={(className: string) => {\n          return genres.map((genre: TGenre) => {\n            const isActive = isStringsEqual(activeGenre, genre.name);\n            const elementClass = `${className} ${isActive ? \"menu__item--active\" : \"\"}`;\n            return <li role=\"presentation\" key={genre.id} className={elementClass} onClick={() => handleGenreClick(genre)}>{genre.name}</li>;\n          });\n        }}\n      />\n      <Content />\n    </main>\n  );\n};\n\nexport default memo(Main);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loginForm\\loginForm.tsx",["222"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { AiOutlineMail } from \"react-icons/ai\";\nimport { RiLockPasswordLine } from \"react-icons/ri\";\nimport { setUserData } from \"../../redux/reducers/user/reducer\";\nimport { ENDPOINTS } from \"../../constants/constants\";\n\ninterface ILoginFormProps {\n  successCb?: (args?: any) => void\n}\n\nconst LoginForm: React.FC<ILoginFormProps> = ({ successCb }: ILoginFormProps) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({});\n  const [formStatus, setFormStatus] = useState({\n    loading: false,\n    error: false,\n    message: \"\",\n  });\n\n  const handleFormSubmit = async (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    setFormStatus((prevState) => ({ ...prevState, loading: true, error: false }));\n    try {\n      const response = await axios.post(\n        ENDPOINTS.login,\n        data,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          baseURL: \"/\",\n        },\n      );\n      if (response.status === 200) {\n        dispatch(setUserData(response.data));\n        // Если был передан callback, вызываем его\n        if (successCb) successCb();\n      }\n    } catch (e) {\n      const { error } = e.response.data;\n      setFormStatus({ error: true, loading: false, message: error });\n    }\n  };\n  const handleInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = evt.target;\n    setData((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <p>Авторизация</p>\n      <div className=\"form__input-wrapper\">\n        <input name=\"email\" onChange={handleInputChange} className=\"form__input\" type=\"email\" placeholder=\"Email\" />\n        <span className=\"form__icon-wrapper\">\n          <AiOutlineMail />\n        </span>\n      </div>\n      <div className=\"form__input-wrapper\">\n        <input name=\"password\" onChange={handleInputChange} className=\"form__input\" type=\"password\" placeholder=\"Password\" />\n        <span className=\"form__icon-wrapper\">\n          <RiLockPasswordLine />\n        </span>\n      </div>\n      <button className=\"button button--orange\" type=\"submit\">\n        {!formStatus.loading && \"Войти\"}\n        {formStatus.loading && \"Загружается\"}\n      </button>\n      {formStatus.error && <div className=\"error form__error\">{formStatus.message}</div>}\n    </form>\n  );\n};\n\nexport default LoginForm;\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\registerForm\\registerForm.tsx",["223"],"import React, { memo, useState } from \"react\";\nimport axios from \"axios\";\nimport { AiOutlineMail } from \"react-icons/ai\";\nimport { RiLockPasswordLine } from \"react-icons/ri\";\nimport { FiUser } from \"react-icons/fi\";\nimport { ENDPOINTS } from \"../../constants/constants\";\n\ninterface IRegisterFormProps {\n  successCb?: (args?: any) => void\n}\n\nconst RegisterForm: React.FC<IRegisterFormProps> = ({ successCb }: IRegisterFormProps) => {\n  const [data, setData] = useState({});\n  const [formStatus, setFormStatus] = useState({\n    loading: false,\n    error: false,\n    message: \"\",\n  });\n\n  const handleFormSubmit = async (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    setFormStatus((prevState) => ({ ...prevState, loading: true, error: false }));\n    try {\n      const response = await axios.post(\n        ENDPOINTS.registration,\n        data,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          baseURL: \"/\",\n        },\n      );\n      if (response.status === 200) {\n        if (successCb) successCb();\n      }\n    } catch (e) {\n      const { error } = e.response.data;\n      setFormStatus({ error: true, loading: false, message: error });\n    }\n  };\n\n  const handleInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = evt.target;\n    setData((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <p>Регистрация</p>\n      <div className=\"form__input-wrapper\">\n        <input required onChange={handleInputChange} name=\"username\" className=\"form__input\" type=\"text\" placeholder=\"Username\" />\n        <span className=\"form__icon-wrapper\">\n          <FiUser />\n        </span>\n      </div>\n      <div className=\"form__input-wrapper\">\n        <input required onChange={handleInputChange} name=\"email\" className=\"form__input\" type=\"email\" placeholder=\"Email\" />\n        <span className=\"form__icon-wrapper\">\n          <AiOutlineMail />\n        </span>\n      </div>\n      <div className=\"form__input-wrapper\">\n        <input required onChange={handleInputChange} name=\"password\" className=\"form__input\" type=\"text\" placeholder=\"Password\" />\n        <span className=\"form__icon-wrapper\">\n          <RiLockPasswordLine />\n        </span>\n      </div>\n      <div className=\"form__input-wrapper\">\n        <input required onChange={handleInputChange} name=\"confirm_password\" className=\"form__input\" type=\"text\" placeholder=\"Repeat password\" />\n        <span className=\"form__icon-wrapper\">\n          <RiLockPasswordLine />\n        </span>\n      </div>\n      <button className=\"button button--orange\" type=\"submit\">\n        {!formStatus.loading && \"Войти\"}\n        {formStatus.loading && \"Загружается\"}\n      </button>\n      {formStatus.error && <div className=\"error form__error\">{formStatus.message}</div>}\n    </form>\n  );\n};\n\nexport default memo(RegisterForm);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\menu\\menu.tsx",["224"],"import React, { memo } from \"react\";\n\ninterface IMenuListProps {\n  className?: string; // класс для родительского компонента\n  render?: any;\n  direction?: string;\n}\n\nconst Menu: React.FC<IMenuListProps> = ({\n  className, render, direction,\n}: IMenuListProps) => {\n  return (\n    <nav className={`menu ${className}`}>\n      <ul className={`menu__list ${direction && \"menu__list--row\"}`}>\n        {render(\"menu__item\")}\n      </ul>\n    </nav>\n  );\n};\n\nMenu.defaultProps = {\n  className: \"\",\n  render: () => <li>1</li>,\n  direction: \"\",\n};\n\nexport default memo(Menu);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\content\\content.tsx",["225","226","227"],"import React, {\n  memo, useCallback, useEffect, useState, useRef,\n} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport debounce from \"lodash.debounce\";\nimport Menu from \"../menu/menu\";\nimport { CONSTANT_GENRES } from \"../../constants/constants\";\nimport Search from \"../search/search\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\nimport { isStringsEqual } from \"../../utils/helpers\";\nimport { changeCategory } from \"../../redux/reducers/genre/reducer\";\nimport { TCategoryListItem } from \"../../redux/reducers/genre/types/types\";\nimport Films from \"../films/films\";\nimport Loader from \"../loader/loader\";\nimport { IClientFilmData } from \"../../redux/reducers/films/types/types\";\n\nconst Content: React.FC = () => {\n  const [filmsToShow, setFilmsToShow] = useState<Array<IClientFilmData>>([]);\n  const dispatch = useDispatch();\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const filmCategory = useSelector((state: IRootState) => state.genres.category);\n  const activeGenre = useSelector((state: IRootState) => state.genres.active);\n  const genreCategory = useSelector((state: IRootState) => state.genres.category);\n  const isFilmLoading = useSelector((state: IRootState) => state.films.loading);\n  const films = useSelector((state: IRootState) => state.films.films);\n\n  const handleCategoryClick = useCallback((category: TCategoryListItem) => {\n    if (isStringsEqual(category.name, filmCategory)) return;\n    dispatch(changeCategory(category.id));\n  }, [filmCategory]);\n\n  useEffect(() => {\n    setFilmsToShow(films);\n  }, [films]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [activeGenre, genreCategory]);\n\n  // Используем debounce, чтобы не вызывать каждый поиск фильмов при вводе текста в строку поиска\n  const handleSearchInput = useCallback(debounce((evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.target.value === \"\") {\n      setFilmsToShow(films);\n      return;\n    }\n\n    const filterFilms = films.filter((film) => {\n      const filmTitle = film.title.toLowerCase();\n\n      return filmTitle.indexOf(evt.target.value.toLowerCase()) !== -1;\n    });\n\n    setFilmsToShow(filterFilms);\n  }, 500), [films]);\n  return (\n    <div className=\"content\">\n      <div className=\"content__header\">\n        {\n          activeGenre === \"All\"\n          && (\n          <Menu\n            direction=\"row\"\n            render={(className: string) => {\n              return CONSTANT_GENRES.map((movie: any) => {\n                const isActive = isStringsEqual(movie.name, filmCategory);\n                const elementClass = `${className} ${isActive ? \"menu__item--active\" : \"\"}`;\n                return <li role=\"presentation\" className={elementClass} key={movie.id} onClick={() => handleCategoryClick(movie)}>{movie.name}</li>;\n              });\n            }}\n          />\n          )\n        }\n        <Search className=\"content__search\" callback={handleSearchInput} ref={searchInputRef} />\n      </div>\n      <div className=\"content__films\">\n        { isFilmLoading\n          ? <Loader />\n          : <Films isSearching={searchInputRef.current && searchInputRef?.current.value !== \"\"} films={filmsToShow} />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Content);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\films\\films.tsx",["228","229"],"import React, { memo, useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport debounce from \"lodash.debounce\";\nimport { IClientFilmData } from \"../../redux/reducers/films/types/types\";\nimport FilmCard from \"../film-card/film-card\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\nimport Loader from \"../loader/loader\";\nimport { loadAdditionFilmsRequest } from \"../../redux/reducers/films/reducer\";\nimport { RoutePathes } from \"../../constants/constants\";\n\ninterface IFilmsProps {\n  className?: string\n  films: Array<IClientFilmData>,\n  isSearching: boolean | null,\n}\n\nconst Films = ({ className, films, isSearching = false }: IFilmsProps) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state: IRootState) => state.films.loadingAdditionFilms);\n  // const isSearching = useSelector((state: IRootState) => state.films.isSearching);\n\n  const handleScroll = useCallback(debounce(() => {\n    if (((window.innerHeight + window.scrollY) >= document.body.offsetHeight) && !isSearching && !isLoading) {\n      dispatch(loadAdditionFilmsRequest());\n    }\n  }, 500), [isSearching, isLoading]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [isSearching, films, isLoading]);\n\n  const createFilmsCards = useCallback(() => {\n    return films.map((film: IClientFilmData) => {\n      const { id, ...props } = film;\n      return <Link key={film.id} to={`${RoutePathes.FILM_DETAILS}/${id}`}><FilmCard data={props} /></Link>;\n    });\n  }, [films]);\n  return (\n    <>\n      <div className={`films ${className}`}>\n        {createFilmsCards()}\n      </div>\n      { isLoading\n      && (\n      <div className=\"films__loader\">\n        <Loader />\n      </div>\n      )}\n    </>\n  );\n};\n\nFilms.defaultProps = {\n  className: \"\",\n};\n\nexport default memo(Films);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\search\\search.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-card\\film-card.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\private-route\\private-route.tsx",["230","231"],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\popup\\popup.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\redirect-login\\redirect-login.tsx",["232"],"import React from \"react\";\n\nconst RedirectLogin = () => {\n  return (\n    <div>Необходимо залогиниться</div>\n  );\n};\n\nexport default RedirectLogin;\n","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\adapters\\film.ts",["233","234"],"import { IClientFilmDetails } from \"../../redux/reducers/films/types/types\";\nimport { IServerFilmData, IServerFilmDetails } from \"../../services/types/types\";\n\nexport default class FilmAdapter {\n  static transformElement(element: IServerFilmData) {\n    return {\n      adult: element.adult,\n      backdropPath: element.backdrop_path,\n      genreIds: element.genre_ids,\n      id: element.id,\n      originalLanguage: element.original_language,\n      originalTitle: element.original_title,\n      overview: element.overview,\n      popularity: element.popularity,\n      posterPath: element.poster_path,\n      releaseDate: element.release_date,\n      title: element.title,\n      video: element.video,\n      voteAverage: element.vote_average,\n      voteCount: element.vote_count,\n    };\n  }\n\n  static transformData(data: Array<IServerFilmData>) {\n    return data.map(this.transformElement);\n  }\n\n  static transformFilmDetailsData(element: IServerFilmDetails): IClientFilmDetails {\n    return {\n      adult: element.adult,\n      backdropPath: element.backdrop_path,\n      genres: element.genres,\n      id: element.id,\n      originalLanguage: element.original_language,\n      originalTitle: element.original_title,\n      overview: element.overview,\n      popularity: element.popularity,\n      posterPath: element.poster_path,\n      releaseDate: element.release_date,\n      title: element.title,\n      video: element.video,\n      voteAverage: element.vote_average,\n      voteCount: element.vote_count,\n      budget: element.budget,\n      runtime: element.runtime,\n      tagline: element.tagline,\n    };\n  }\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\adapters\\reviews.ts",["235","236"],"import { IServerReview } from \"../../services/types/types\";\n\nexport interface IClientReview {\n  author: string;\n  content: string;\n  id: string\n  create: string;\n}\n\nexport default class ReviewsAdapter {\n  static transformElement(element: IServerReview) {\n    return {\n      author: element.author,\n      content: element.content,\n      create: element.created_at,\n      id: element.id,\n    };\n  }\n\n  static transformData(data: IServerReview[]) {\n    return data.map(this.transformElement);\n  }\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\review-list\\review-list.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\review-list\\component\\review.tsx",[],{"ruleId":"237","severity":1,"message":"238","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":11},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"237","severity":1,"message":"255","line":2,"column":19,"nodeType":"239","messageId":"240","endLine":2,"endColumn":25},{"ruleId":"237","severity":1,"message":"256","line":7,"column":23,"nodeType":"239","messageId":"240","endLine":7,"endColumn":32},{"ruleId":"237","severity":1,"message":"257","line":2,"column":18,"nodeType":"239","messageId":"240","endLine":2,"endColumn":26},{"ruleId":"258","severity":1,"message":"259","line":5,"column":16,"nodeType":"260","messageId":"261","endLine":5,"endColumn":36},{"ruleId":"237","severity":1,"message":"262","line":56,"column":7,"nodeType":"239","messageId":"240","endLine":56,"endColumn":15},{"ruleId":"237","severity":1,"message":"257","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":18},{"ruleId":"237","severity":1,"message":"263","line":6,"column":8,"nodeType":"239","messageId":"240","endLine":6,"endColumn":12},{"ruleId":"264","severity":1,"message":"265","line":46,"column":6,"nodeType":"266","endLine":46,"endColumn":8,"suggestions":"267"},{"ruleId":"258","severity":1,"message":"259","line":18,"column":16,"nodeType":"260","messageId":"261","endLine":18,"endColumn":42},{"ruleId":"237","severity":1,"message":"268","line":1,"column":38,"nodeType":"239","messageId":"240","endLine":1,"endColumn":45},{"ruleId":"237","severity":1,"message":"269","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":28},{"ruleId":"270","severity":1,"message":"271","line":45,"column":69,"nodeType":"272","messageId":"273","endLine":45,"endColumn":72,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":32,"column":11,"nodeType":"277","messageId":"278","endLine":32,"endColumn":22},{"ruleId":"275","severity":1,"message":"276","line":59,"column":11,"nodeType":"277","messageId":"278","endLine":59,"endColumn":22},{"ruleId":"275","severity":1,"message":"276","line":80,"column":11,"nodeType":"277","messageId":"278","endLine":80,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":84,"column":16,"nodeType":"260","messageId":"261","endLine":84,"endColumn":42},{"ruleId":"237","severity":1,"message":"279","line":1,"column":23,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"268","line":1,"column":38,"nodeType":"239","messageId":"240","endLine":1,"endColumn":45},{"ruleId":"237","severity":1,"message":"257","line":1,"column":10,"nodeType":"239","messageId":"240","endLine":1,"endColumn":18},{"ruleId":"237","severity":1,"message":"280","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":33},{"ruleId":"237","severity":1,"message":"281","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"276","line":35,"column":23,"nodeType":"277","messageId":"278","endLine":35,"endColumn":34},{"ruleId":"275","severity":1,"message":"276","line":40,"column":23,"nodeType":"277","messageId":"278","endLine":40,"endColumn":34},{"ruleId":"275","severity":1,"message":"276","line":52,"column":11,"nodeType":"277","messageId":"278","endLine":52,"endColumn":22},{"ruleId":"264","severity":1,"message":"282","line":111,"column":6,"nodeType":"266","endLine":111,"endColumn":16,"suggestions":"283"},{"ruleId":"270","severity":1,"message":"271","line":20,"column":20,"nodeType":"272","messageId":"273","endLine":20,"endColumn":23,"suggestions":"284"},{"ruleId":"237","severity":1,"message":"285","line":38,"column":16,"nodeType":"239","messageId":"240","endLine":38,"endColumn":22},{"ruleId":"237","severity":1,"message":"286","line":5,"column":10,"nodeType":"239","messageId":"240","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"276","line":59,"column":7,"nodeType":"277","messageId":"278","endLine":59,"endColumn":18},{"ruleId":"264","severity":1,"message":"287","line":67,"column":6,"nodeType":"266","endLine":67,"endColumn":10,"suggestions":"288"},{"ruleId":"275","severity":1,"message":"276","line":81,"column":7,"nodeType":"277","messageId":"278","endLine":81,"endColumn":18},{"ruleId":"264","severity":1,"message":"289","line":83,"column":6,"nodeType":"266","endLine":83,"endColumn":23,"suggestions":"290"},{"ruleId":"264","severity":1,"message":"291","line":99,"column":6,"nodeType":"266","endLine":99,"endColumn":46,"suggestions":"292"},{"ruleId":"275","severity":1,"message":"276","line":100,"column":3,"nodeType":"277","messageId":"278","endLine":100,"endColumn":14},{"ruleId":"270","severity":1,"message":"271","line":105,"column":20,"nodeType":"272","messageId":"273","endLine":105,"endColumn":23,"suggestions":"293"},{"ruleId":"264","severity":1,"message":"294","line":112,"column":6,"nodeType":"266","endLine":112,"endColumn":19,"suggestions":"295"},{"ruleId":"264","severity":1,"message":"296","line":19,"column":6,"nodeType":"266","endLine":19,"endColumn":19,"suggestions":"297"},{"ruleId":"270","severity":1,"message":"271","line":10,"column":23,"nodeType":"272","messageId":"273","endLine":10,"endColumn":26,"suggestions":"298"},{"ruleId":"270","severity":1,"message":"271","line":9,"column":23,"nodeType":"272","messageId":"273","endLine":9,"endColumn":26,"suggestions":"299"},{"ruleId":"270","severity":1,"message":"271","line":5,"column":12,"nodeType":"272","messageId":"273","endLine":5,"endColumn":15,"suggestions":"300"},{"ruleId":"264","severity":1,"message":"296","line":30,"column":6,"nodeType":"266","endLine":30,"endColumn":20,"suggestions":"301"},{"ruleId":"264","severity":1,"message":"302","line":41,"column":29,"nodeType":"239","endLine":41,"endColumn":40},{"ruleId":"270","severity":1,"message":"271","line":64,"column":50,"nodeType":"272","messageId":"273","endLine":64,"endColumn":53,"suggestions":"303"},{"ruleId":"264","severity":1,"message":"302","line":23,"column":24,"nodeType":"239","endLine":23,"endColumn":35},{"ruleId":"264","severity":1,"message":"304","line":35,"column":6,"nodeType":"266","endLine":35,"endColumn":37,"suggestions":"305"},{"ruleId":"270","severity":1,"message":"271","line":7,"column":30,"nodeType":"272","messageId":"273","endLine":7,"endColumn":33,"suggestions":"306"},{"ruleId":"270","severity":1,"message":"271","line":7,"column":65,"nodeType":"272","messageId":"273","endLine":7,"endColumn":68,"suggestions":"307"},{"ruleId":"258","severity":1,"message":"259","line":3,"column":23,"nodeType":"308","messageId":"261","endLine":3,"endColumn":28},{"ruleId":"258","severity":1,"message":"259","line":5,"column":3,"nodeType":"309","messageId":"261","endLine":5,"endColumn":52},{"ruleId":"258","severity":1,"message":"259","line":24,"column":3,"nodeType":"309","messageId":"261","endLine":24,"endColumn":53},{"ruleId":"258","severity":1,"message":"259","line":11,"column":3,"nodeType":"309","messageId":"261","endLine":11,"endColumn":50},{"ruleId":"258","severity":1,"message":"259","line":20,"column":3,"nodeType":"309","messageId":"261","endLine":20,"endColumn":46},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","jsx-a11y/accessible-emoji",[],"lines-around-directive",["310"],"no-spaced-func",["311"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'Action' is defined but never used.","'RootState' is defined but never used.","'Redirect' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'CORS_URL' is assigned a value but never used.","'Main' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["312"],"'current' is defined but never used.","'TUserFavoriteFilms' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["313","314"],"no-console","Unexpected console statement.","MemberExpression","unexpected","'PayloadAction' is defined but never used.","'Switch' is defined but never used.","'PrivateRoute' is defined but never used.","React Hook useMemo has a missing dependency: 'userMenuActions'. Either include it or remove the dependency array.",["315"],["316","317"],"'params' is assigned a value but never used.","'FaRegHeart' is defined but never used.","React Hook useEffect has a missing dependency: 'getFilmDetailsData'. Either include it or remove the dependency array.",["318"],"React Hook useCallback has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["319"],"React Hook useMemo has a missing dependency: 'handleFavoriteIconFilmClick'. Either include it or remove the dependency array.",["320"],["321","322"],"React Hook useMemo has an unnecessary dependency: 'id'. Either exclude it or remove the dependency array.",["323"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["324"],["325","326"],["327","328"],["329","330"],["331"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.",["332","333"],"React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["334"],["335","336"],["337","338"],"ArrowFunctionExpression","FunctionExpression","padding-line-between-statements","func-call-spacing",{"desc":"339","fix":"340"},{"messageId":"341","fix":"342","desc":"343"},{"messageId":"344","fix":"345","desc":"346"},{"desc":"347","fix":"348"},{"messageId":"341","fix":"349","desc":"343"},{"messageId":"344","fix":"350","desc":"346"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"messageId":"341","fix":"357","desc":"343"},{"messageId":"344","fix":"358","desc":"346"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"messageId":"341","fix":"363","desc":"343"},{"messageId":"344","fix":"364","desc":"346"},{"messageId":"341","fix":"365","desc":"343"},{"messageId":"344","fix":"366","desc":"346"},{"messageId":"341","fix":"367","desc":"343"},{"messageId":"344","fix":"368","desc":"346"},{"desc":"369","fix":"370"},{"messageId":"341","fix":"371","desc":"343"},{"messageId":"344","fix":"372","desc":"346"},{"desc":"373","fix":"374"},{"messageId":"341","fix":"375","desc":"343"},{"messageId":"344","fix":"376","desc":"346"},{"messageId":"341","fix":"377","desc":"343"},{"messageId":"344","fix":"378","desc":"346"},"Update the dependencies array to be: [dispatch]",{"range":"379","text":"380"},"suggestUnknown",{"range":"381","text":"382"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"381","text":"383"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [userMenuActions, userName]",{"range":"384","text":"385"},{"range":"386","text":"382"},{"range":"386","text":"383"},"Update the dependencies array to be: [getFilmDetailsData, id]",{"range":"387","text":"388"},"Update the dependencies array to be: [details?.data?.backdropPath, dispatch, id, userID]",{"range":"389","text":"390"},"Update the dependencies array to be: [authStatus, favoriteFilms, id, handleFavoriteIconFilmClick]",{"range":"391","text":"392"},{"range":"393","text":"382"},{"range":"393","text":"383"},"Update the dependencies array to be: [details]",{"range":"394","text":"395"},"Update the dependencies array to be: [activeGenre, dispatch]",{"range":"396","text":"397"},{"range":"398","text":"382"},{"range":"398","text":"383"},{"range":"399","text":"382"},{"range":"399","text":"383"},{"range":"400","text":"382"},{"range":"400","text":"383"},"Update the dependencies array to be: [dispatch, filmCategory]",{"range":"401","text":"402"},{"range":"403","text":"382"},{"range":"403","text":"383"},"Update the dependencies array to be: [isSearching, films, isLoading, handleScroll]",{"range":"404","text":"405"},{"range":"406","text":"382"},{"range":"406","text":"383"},{"range":"407","text":"382"},{"range":"407","text":"383"},[1708,1710],"[dispatch]",[1444,1447],"unknown","never",[3153,3163],"[userMenuActions, userName]",[416,419],[2338,2342],"[getFilmDetailsData, id]",[2749,2766],"[details?.data?.backdropPath, dispatch, id, userID]",[3272,3312],"[authStatus, favoriteFilms, id, handleFavoriteIconFilmClick]",[3440,3443],[3721,3734],"[details]",[819,832],"[activeGenre, dispatch]",[383,386],[325,328],[136,139],[1509,1523],"[dispatch, filmCategory]",[2464,2467],[1372,1403],"[isSearching, films, isLoading, handleScroll]",[272,275],[307,310]]