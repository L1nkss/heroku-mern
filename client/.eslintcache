[{"C:\\repos\\l1nks-movie-app\\client\\src\\index.tsx":"1","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\app.tsx":"2","C:\\repos\\l1nks-movie-app\\client\\src\\components\\header\\header.tsx":"3","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\history.ts":"4","C:\\repos\\l1nks-movie-app\\client\\src\\components\\menu\\menu.tsx":"5","C:\\repos\\l1nks-movie-app\\client\\src\\components\\main\\main.tsx":"6","C:\\repos\\l1nks-movie-app\\client\\src\\mocks\\data.ts":"7","C:\\repos\\l1nks-movie-app\\client\\src\\components\\content\\content.tsx":"8","C:\\repos\\l1nks-movie-app\\client\\src\\components\\search\\search.tsx":"9","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loader\\loader.tsx":"10","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\store.ts":"11","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\rootReducer.ts":"12","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\reducer.ts":"13","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\sagas\\sagas.ts":"14","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\saga\\saga.ts":"15","C:\\repos\\l1nks-movie-app\\client\\src\\services\\api.ts":"16","C:\\repos\\l1nks-movie-app\\client\\src\\constants\\constants.ts":"17","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\helpers.ts":"18"},{"size":445,"mtime":1609704486871,"results":"19","hashOfConfig":"20"},{"size":976,"mtime":1609760228334,"results":"21","hashOfConfig":"20"},{"size":2027,"mtime":1609767420076,"results":"22","hashOfConfig":"20"},{"size":114,"mtime":1609703378370,"results":"23","hashOfConfig":"20"},{"size":596,"mtime":1609703370883,"results":"24","hashOfConfig":"20"},{"size":1424,"mtime":1609760846607,"results":"25","hashOfConfig":"20"},{"size":237,"mtime":1609759642731,"results":"26","hashOfConfig":"20"},{"size":1726,"mtime":1609770089272,"results":"27","hashOfConfig":"20"},{"size":379,"mtime":1609766741069,"results":"28","hashOfConfig":"20"},{"size":401,"mtime":1609703832115,"results":"29","hashOfConfig":"20"},{"size":520,"mtime":1609748017312,"results":"30","hashOfConfig":"20"},{"size":230,"mtime":1609705629874,"results":"31","hashOfConfig":"20"},{"size":1902,"mtime":1609766131956,"results":"32","hashOfConfig":"20"},{"size":183,"mtime":1609747976589,"results":"33","hashOfConfig":"20"},{"size":461,"mtime":1609758298442,"results":"34","hashOfConfig":"20"},{"size":865,"mtime":1609770749918,"results":"35","hashOfConfig":"20"},{"size":462,"mtime":1609770756204,"results":"36","hashOfConfig":"20"},{"size":159,"mtime":1609758518102,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"12lfreb",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\repos\\l1nks-movie-app\\client\\src\\index.tsx",[],["83","84","85","86","87","88","89"],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\app.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\header\\header.tsx",["90","91","92","93"],"import React, { memo, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Menu from \"../menu/menu\";\n\nconst Header: React.FC = () => {\n  const isLogin = false; // убрать после подключения БД\n  const userMenuActions = [\n    {\n      label: \"Избранные фильмы\",\n      callback: () => console.log(\"Колбэк с фильмами\"),\n      key: 3,\n    },\n    {\n      label: \"Настройки\",\n      callback: () => console.log(\"Колбэк с настройкой\"),\n      key: 1,\n    },\n    {\n      label: \"Выйти\",\n      callback: () => console.log(\"Колбэк с выйти\"),\n      key: 2,\n    },\n  ];\n  const authButtons = useMemo(() => {\n    return (\n      <>\n        <button className=\"button\" type=\"button\">Логин</button>\n        <button className=\"button button--orange\" type=\"button\">Регистрация</button>\n      </>\n    );\n  }, []);\n\n  const userProfile = useMemo(() => {\n    return (\n      <div className=\"header__user-menu\">\n        <h3 className=\"header__user-name\">\n          userTest\n          <Menu\n            className=\"header__dropdown\"\n            render={(className: string) => {\n              return userMenuActions.map((element) => {\n                return (\n                  <li\n                    role=\"presentation\"\n                    key={element.key}\n                    onKeyDown={element.callback}\n                    onClick={element.callback}\n                    className={className}\n                  >\n                    {element.label}\n                  </li>\n                );\n              });\n            }}\n          />\n        </h3>\n      </div>\n    );\n  }, []);\n  return (\n    <header className=\"header\">\n      <div className=\"content-wrapper header__content\">\n        <h1 className=\"header__title\">\n          <Link to=\"/\">The movie pet project</Link>\n        </h1>\n        <>\n          {isLogin ? authButtons : userProfile}\n        </>\n      </div>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\history.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\menu\\menu.tsx",["94"],"import React, { memo } from \"react\";\n\ninterface IMenuListProps {\n  className?: string; // класс для родительского компонента\n  render?: any;\n  direction?: string;\n}\n\nconst Menu: React.FC<IMenuListProps> = ({\n  className, render, direction,\n}: IMenuListProps) => {\n  return (\n    <nav className={`menu ${className}`}>\n      <ul className={`menu__list ${direction && \"menu__list--row\"}`}>\n        {render(\"menu__item\")}\n      </ul>\n    </nav>\n  );\n};\n\nMenu.defaultProps = {\n  className: \"\",\n  render: () => <li>1</li>,\n  direction: \"\",\n};\n\nexport default memo(Menu);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\main\\main.tsx",["95"],"import React, { memo, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Menu from \"../menu/menu\";\nimport Content from \"../content/content\";\nimport { isStringsEqual } from \"../../utils/helpers\";\nimport { IGenre } from \"../../redux/reducers/genre/types/types\";\nimport { changeActiveGenre } from \"../../redux/reducers/genre/reducer\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\n\nconst Main: React.FC = () => {\n  const dispatch = useDispatch();\n  const genres = useSelector((state: IRootState) => state.genres.list);\n  const activeGenre = useSelector((state: IRootState) => state.genres.active);\n\n  const handleGenreClick = useCallback((genre: IGenre) => {\n    if (isStringsEqual(genre.name, activeGenre)) return;\n\n    dispatch(changeActiveGenre(genre.id));\n  }, [activeGenre]);\n  return (\n    <main className=\"main content-wrapper\">\n      <Menu\n        className=\"genre-list\"\n        render={(className: string) => {\n          return genres.map((genre: IGenre) => {\n            const isActive = isStringsEqual(activeGenre, genre.name);\n            const elementClass = `${className} ${isActive ? \"menu__item--active\" : \"\"}`;\n            return <li role=\"presentation\" key={genre.id} className={elementClass} onClick={() => handleGenreClick(genre)}>{genre.name}</li>;\n          });\n        }}\n      />\n      <Content />\n    </main>\n  );\n};\n\nexport default memo(Main);\n","C:\\repos\\l1nks-movie-app\\client\\src\\mocks\\data.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\content\\content.tsx",["96","97","98"],"import React, { memo, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Menu from \"../menu/menu\";\nimport { CONSTANT_GENRES } from \"../../constants/constants\";\nimport Search from \"../search/search\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\nimport { isStringsEqual } from \"../../utils/helpers\";\nimport { changeCategory } from \"../../redux/reducers/genre/reducer\";\nimport { TCategory, TCategoryListItem } from \"../../redux/reducers/genre/types/types\";\n\nconst Content: React.FC = () => {\n  const dispatch = useDispatch();\n  const filmCategory = useSelector((state: IRootState) => state.genres.category);\n  const activeGenre = useSelector((state: IRootState) => state.genres.active);\n  const handleCategoryClick = useCallback((category: TCategoryListItem) => {\n    if (isStringsEqual(category.name, filmCategory)) return;\n    dispatch(changeCategory(category.id));\n  }, [filmCategory]);\n  return (\n    <div className=\"content\">\n      <div className=\"content__header\">\n        {\n          activeGenre === \"All\"\n          && (\n          <Menu\n            direction=\"row\"\n            render={(className: string) => {\n              return CONSTANT_GENRES.map((movie: any) => {\n                const isActive = isStringsEqual(movie.name, filmCategory);\n                const elementClass = `${className} ${isActive ? \"menu__item--active\" : \"\"}`;\n                return <li role=\"presentation\" className={elementClass} key={movie.id} onClick={() => handleCategoryClick(movie)}>{movie.name}</li>;\n              });\n            }}\n          />\n          )\n        }\n        <Search className=\"content__search\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Content);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\search\\search.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\loader\\loader.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\store.ts",["99","100"],"import {\n  configureStore, Action, getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas/sagas\";\n\nimport rootReducer, { RootState } from \"./reducers/rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware({ thunk: false }), sagaMiddleware],\n});\n\nexport type AppDispatch = typeof store.dispatch;\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\rootReducer.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\reducer.ts",["101"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\n\nimport { IGenres, TCategoryListItem } from \"./types/types\";\n\nconst categoryList: Array<TCategoryListItem> = [\n  {\n    id: 6542,\n    name: \"Now playing\",\n  },\n  {\n    id: 5655,\n    name: \"Popular\",\n  },\n  {\n    id: 6571,\n    name: \"Top Rated\",\n  },\n  {\n    id: 7823,\n    name: \"Upcoming\",\n  },\n];\n\nconst initialState: IGenres = {\n  loading: false,\n  error: false,\n  list: [{\n    id: 63467,\n    name: \"All\",\n  }],\n  active: \"All\",\n  category: \"Now playing\", // катерогии фильмов при выборе жанра All\n  categoryList,\n};\n\nconst genreSlice = createSlice({\n  name: \"genres\",\n  initialState,\n  reducers: {\n    getGenresRequest(state: IGenres): void {\n      state.loading = true;\n      state.error = false;\n    },\n    getGenresSuccess(state: IGenres, action: PayloadAction<Array<IGenres>>): void {\n      const newGenres = [...current(state.list)]; // берем текущий массив жанров\n      action.payload.forEach((element: any) => { // добавляем жанры с api\n        newGenres.push(element);\n      });\n      state.loading = false;\n      state.list = newGenres;\n    },\n    getGenresError(state): void {\n      state.error = true;\n      state.loading = false;\n    },\n    changeActiveGenre(state, action: PayloadAction<number>): void {\n      const idx = current(state.list).findIndex((element) => element.id === action.payload);\n      state.active = current(state.list)[idx].name;\n    },\n    changeCategory(state, action: PayloadAction<number>): void {\n      const idx = current(state.categoryList).findIndex((element) => element.id === action.payload);\n      state.category = current(state.categoryList)[idx].name;\n    },\n  },\n});\n\nexport const { getGenresRequest, getGenresSuccess, changeActiveGenre, changeCategory } = genreSlice.actions;\n\nexport default genreSlice.reducer;\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\sagas\\sagas.ts",["102"],"import { all } from \"redux-saga/effects\";\nimport watchGenreSaga from \"../reducers/genre/saga/saga\";\n\nexport default function* rootSaga() {\n  yield all([\n    watchGenreSaga(),\n  ]);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\saga\\saga.ts",["103","104"],"import { put, call, takeEvery } from \"redux-saga/effects\";\nimport { getGenresRequest, getGenresSuccess } from \"../reducer\";\nimport api from \"../../../../services/api\";\n\nfunction* getGenres() {\n  try {\n    const response = yield call(api.getGenres);\n    yield put(getGenresSuccess(response.data.genres));\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\nexport default function* watchGenreSaga() {\n  yield takeEvery(getGenresRequest.type, getGenres);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\services\\api.ts",["105","106"],"C:\\repos\\l1nks-movie-app\\client\\src\\constants\\constants.ts",["107"],"C:\\repos\\l1nks-movie-app\\client\\src\\utils\\helpers.ts",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":10,"column":23,"nodeType":"124","messageId":"125","endLine":10,"endColumn":34},{"ruleId":"122","severity":1,"message":"123","line":15,"column":23,"nodeType":"124","messageId":"125","endLine":15,"endColumn":34},{"ruleId":"122","severity":1,"message":"123","line":20,"column":23,"nodeType":"124","messageId":"125","endLine":20,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":59,"column":6,"nodeType":"128","endLine":59,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":5,"column":12,"nodeType":"132","messageId":"133","endLine":5,"endColumn":15,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"135","line":19,"column":6,"nodeType":"128","endLine":19,"endColumn":19,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":9,"column":10,"nodeType":"139","messageId":"140","endLine":9,"endColumn":19},{"ruleId":"126","severity":1,"message":"135","line":18,"column":6,"nodeType":"128","endLine":18,"endColumn":20,"suggestions":"141"},{"ruleId":"130","severity":1,"message":"131","line":28,"column":50,"nodeType":"132","messageId":"133","endLine":28,"endColumn":53,"suggestions":"142"},{"ruleId":"137","severity":1,"message":"143","line":2,"column":19,"nodeType":"139","messageId":"140","endLine":2,"endColumn":25},{"ruleId":"137","severity":1,"message":"144","line":7,"column":23,"nodeType":"139","messageId":"140","endLine":7,"endColumn":32},{"ruleId":"130","severity":1,"message":"131","line":46,"column":40,"nodeType":"132","messageId":"133","endLine":46,"endColumn":43,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":4,"column":16,"nodeType":"148","messageId":"149","endLine":4,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":10,"column":11,"nodeType":"124","messageId":"125","endLine":10,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":14,"column":16,"nodeType":"148","messageId":"149","endLine":14,"endColumn":42},{"ruleId":"130","severity":1,"message":"131","line":20,"column":20,"nodeType":"132","messageId":"133","endLine":20,"endColumn":23,"suggestions":"150"},{"ruleId":"137","severity":1,"message":"151","line":38,"column":16,"nodeType":"139","messageId":"140","endLine":38,"endColumn":22},{"ruleId":"137","severity":1,"message":"152","line":25,"column":7,"nodeType":"139","messageId":"140","endLine":25,"endColumn":15},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["153"],"no-spaced-func",["154"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'userMenuActions'. Either include it or remove the dependency array.","ArrayExpression",["155"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["156","157"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["158"],"@typescript-eslint/no-unused-vars","'TCategory' is defined but never used.","Identifier","unusedVar",["159"],["160","161"],"'Action' is defined but never used.","'RootState' is defined but never used.",["162","163"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType",["164","165"],"'params' is assigned a value but never used.","'CORS_URL' is assigned a value but never used.","padding-line-between-statements","func-call-spacing",{"desc":"166","fix":"167"},{"messageId":"168","fix":"169","desc":"170"},{"messageId":"171","fix":"172","desc":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"messageId":"168","fix":"178","desc":"170"},{"messageId":"171","fix":"179","desc":"173"},{"messageId":"168","fix":"180","desc":"170"},{"messageId":"171","fix":"181","desc":"173"},{"messageId":"168","fix":"182","desc":"170"},{"messageId":"171","fix":"183","desc":"173"},"Update the dependencies array to be: [userMenuActions]",{"range":"184","text":"185"},"suggestUnknown",{"range":"186","text":"187"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"186","text":"188"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [activeGenre, dispatch]",{"range":"189","text":"190"},"Update the dependencies array to be: [dispatch, filmCategory]",{"range":"191","text":"192"},{"range":"193","text":"187"},{"range":"193","text":"188"},{"range":"194","text":"187"},{"range":"194","text":"188"},{"range":"195","text":"187"},{"range":"195","text":"188"},[1569,1571],"[userMenuActions]",[136,139],"unknown","never",[819,832],"[activeGenre, dispatch]",[928,942],"[dispatch, filmCategory]",[1221,1224],[983,986],[416,419]]