[{"C:\\repos\\l1nks-movie-app\\client\\src\\index.tsx":"1","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\app.tsx":"2","C:\\repos\\l1nks-movie-app\\client\\src\\components\\header\\header.tsx":"3","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\history.ts":"4","C:\\repos\\l1nks-movie-app\\client\\src\\components\\menu\\menu.tsx":"5","C:\\repos\\l1nks-movie-app\\client\\src\\components\\main\\main.tsx":"6","C:\\repos\\l1nks-movie-app\\client\\src\\mocks\\data.ts":"7","C:\\repos\\l1nks-movie-app\\client\\src\\components\\content\\content.tsx":"8","C:\\repos\\l1nks-movie-app\\client\\src\\components\\search\\search.tsx":"9","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loader\\loader.tsx":"10","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\store.ts":"11","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\rootReducer.ts":"12","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\reducer.ts":"13","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\sagas\\sagas.ts":"14","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\saga\\saga.ts":"15","C:\\repos\\l1nks-movie-app\\client\\src\\services\\api.ts":"16","C:\\repos\\l1nks-movie-app\\client\\src\\constants\\constants.ts":"17","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\helpers.ts":"18","C:\\repos\\l1nks-movie-app\\client\\src\\components\\popup\\popup.tsx":"19","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loginForm\\loginForm.tsx":"20","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\user\\reducer.ts":"21","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\reducer.ts":"22","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\saga\\saga.ts":"23","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\utils\\filmAdapter.ts":"24","C:\\repos\\l1nks-movie-app\\client\\src\\components\\films\\films.tsx":"25","C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-card\\film-card.tsx":"26"},{"size":445,"mtime":1609772190042,"results":"27","hashOfConfig":"28"},{"size":1713,"mtime":1610564031656,"results":"29","hashOfConfig":"28"},{"size":3706,"mtime":1610121407294,"results":"30","hashOfConfig":"28"},{"size":114,"mtime":1609703378370,"results":"31","hashOfConfig":"28"},{"size":596,"mtime":1609703370883,"results":"32","hashOfConfig":"28"},{"size":1424,"mtime":1609772190042,"results":"33","hashOfConfig":"28"},{"size":237,"mtime":1609759642731,"results":"34","hashOfConfig":"28"},{"size":2735,"mtime":1610568948909,"results":"35","hashOfConfig":"28"},{"size":472,"mtime":1610568487010,"results":"36","hashOfConfig":"28"},{"size":401,"mtime":1609772190042,"results":"37","hashOfConfig":"28"},{"size":520,"mtime":1609772190043,"results":"38","hashOfConfig":"28"},{"size":319,"mtime":1610458173453,"results":"39","hashOfConfig":"28"},{"size":1905,"mtime":1610539167343,"results":"40","hashOfConfig":"28"},{"size":263,"mtime":1610469849415,"results":"41","hashOfConfig":"28"},{"size":461,"mtime":1609772190042,"results":"42","hashOfConfig":"28"},{"size":1078,"mtime":1610566217644,"results":"43","hashOfConfig":"28"},{"size":760,"mtime":1610535999463,"results":"44","hashOfConfig":"28"},{"size":363,"mtime":1610538157484,"results":"45","hashOfConfig":"28"},{"size":611,"mtime":1610027578931,"results":"46","hashOfConfig":"28"},{"size":2255,"mtime":1610119025496,"results":"47","hashOfConfig":"28"},{"size":508,"mtime":1610118619003,"results":"48","hashOfConfig":"28"},{"size":709,"mtime":1610485048192,"results":"49","hashOfConfig":"28"},{"size":1954,"mtime":1610566507296,"results":"50","hashOfConfig":"28"},{"size":780,"mtime":1610484624675,"results":"51","hashOfConfig":"28"},{"size":738,"mtime":1610568143832,"results":"52","hashOfConfig":"28"},{"size":1380,"mtime":1610636309388,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"12lfreb",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\repos\\l1nks-movie-app\\client\\src\\index.tsx",[],["122","123","124","125","126","127","128"],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\app.tsx",["129","130"],"import React, { memo, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Header from \"../header/header\";\nimport Main from \"../main/main\";\nimport Loader from \"../loader/loader\";\nimport { getGenresRequest } from \"../../redux/reducers/genre/reducer\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\nimport { setLoginStatus } from \"../../redux/reducers/user/reducer\";\nimport { getFilmsRequest } from \"../../redux/reducers/films/reducer\";\n\nconst App: React.FC = () => {\n  const isGenreLoading = useSelector((state: IRootState) => state.genres.loading);\n  const isFilmsLoading = useSelector((state: IRootState) => state.films.loading);\n  const isContentLoaded = useMemo(() => {\n    return !isGenreLoading && !isFilmsLoading; // проверяем, что жанры и фильмы загрузились\n  }, []);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const response = await axios.get(\"/api/checkToken\");\n        if (response.status === 200) {\n          dispatch(setLoginStatus(true));\n        }\n      } catch (e) {\n        dispatch(setLoginStatus(false));\n      }\n    };\n    dispatch(getGenresRequest()); // загружаем жанры\n    dispatch(getFilmsRequest()); // Загружаем фильмы\n    checkAuthStatus(); // проверяем статус авторизацияя\n  }, []);\n  return (\n    <div className=\"app\">\n      {\n        isContentLoaded\n          ? (\n            <>\n              <Header />\n              <Main />\n            </>\n          )\n          : <Loader />\n      }\n    </div>\n  );\n};\n\nexport default memo(App);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\header\\header.tsx",["131","132","133","134","135"],"import React, { memo, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport Menu from \"../menu/menu\";\nimport Popup from \"../popup/popup\";\nimport LoginForm from \"../loginForm/loginForm\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\nimport { setLoginStatus } from \"../../redux/reducers/user/reducer\";\n\n/*\n todo\n не очень красиво с formToShow, исправить по возможности выбор контента для Popup'a\n */\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const [showPopup, setShowPopup] = useState(false);\n  const [formToShow, setFormToShow] = useState(\"\");\n  const isLogin = useSelector((state: IRootState) => state.user.isLogin);\n\n  const togglePopupStatus = () => {\n    setShowPopup((prevState) => !prevState);\n  };\n\n  const loginForm = () => {\n    return (\n      <form>\n        <div>\n          <input type=\"text\" placeholder=\"Username\" required />\n        </div>\n        <div>\n          <input type=\"password\" placeholder=\"Password\" required />\n        </div>\n      </form>\n    );\n  };\n  const toggleButtonsClick = () => {\n    if (formToShow === \"login\") return <LoginForm />;\n    return <></>;\n  };\n  const userMenuActions = [\n    {\n      label: \"Избранные фильмы\",\n      callback: () => console.log(\"Колбэк с фильмами\"),\n      key: 3,\n    },\n    {\n      label: \"Настройки\",\n      callback: () => console.log(\"Колбэк с настройкой\"),\n      key: 1,\n    },\n    {\n      label: \"Выйти\",\n      callback: async () => {\n        try {\n          const response = await axios.post(\"/api/logout\");\n          if (response.status === 200) dispatch(setLoginStatus(false));\n        } catch (e) {\n          console.log(\"Ошибка\", e);\n        }\n      },\n      key: 2,\n    },\n  ];\n  const authButtons = useMemo(() => {\n    return (\n      <>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            setFormToShow(\"login\");\n            togglePopupStatus();\n          }}\n        >\n          Логин\n        </button>\n        <button\n          className=\"button button--orange\"\n          type=\"button\"\n          onClick={() => {\n            setFormToShow(\"registration\");\n            togglePopupStatus();\n          }}\n        >\n          Регистрация\n        </button>\n      </>\n    );\n  }, []);\n\n  const userProfile = useMemo(() => {\n    return (\n      <div className=\"header__user-menu\">\n        <h3 className=\"header__user-name\">\n          userTest\n          <Menu\n            className=\"header__dropdown\"\n            render={(className: string) => {\n              return userMenuActions.map((element) => {\n                return (\n                  <li\n                    role=\"presentation\"\n                    key={element.key}\n                    onKeyDown={element.callback}\n                    onClick={element.callback}\n                    className={className}\n                  >\n                    {element.label}\n                  </li>\n                );\n              });\n            }}\n          />\n        </h3>\n      </div>\n    );\n  }, []);\n  return (\n    <header className=\"header\">\n      <div className=\"content-wrapper header__content\">\n        <h1 className=\"header__title\">\n          <Link to=\"/\">The movie pet project</Link>\n        </h1>\n        <>\n          {isLogin ? userProfile : authButtons}\n        </>\n      </div>\n      { showPopup && <Popup closeClickCallback={togglePopupStatus}>{toggleButtonsClick()}</Popup>}\n    </header>\n  );\n};\n\nexport default memo(Header);\n","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\history.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\menu\\menu.tsx",["136"],"import React, { memo } from \"react\";\n\ninterface IMenuListProps {\n  className?: string; // класс для родительского компонента\n  render?: any;\n  direction?: string;\n}\n\nconst Menu: React.FC<IMenuListProps> = ({\n  className, render, direction,\n}: IMenuListProps) => {\n  return (\n    <nav className={`menu ${className}`}>\n      <ul className={`menu__list ${direction && \"menu__list--row\"}`}>\n        {render(\"menu__item\")}\n      </ul>\n    </nav>\n  );\n};\n\nMenu.defaultProps = {\n  className: \"\",\n  render: () => <li>1</li>,\n  direction: \"\",\n};\n\nexport default memo(Menu);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\main\\main.tsx",["137"],"import React, { memo, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Menu from \"../menu/menu\";\nimport Content from \"../content/content\";\nimport { isStringsEqual } from \"../../utils/helpers\";\nimport { IGenre } from \"../../redux/reducers/genre/types/types\";\nimport { changeActiveGenre } from \"../../redux/reducers/genre/reducer\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\n\nconst Main: React.FC = () => {\n  const dispatch = useDispatch();\n  const genres = useSelector((state: IRootState) => state.genres.list);\n  const activeGenre = useSelector((state: IRootState) => state.genres.active);\n\n  const handleGenreClick = useCallback((genre: IGenre) => {\n    if (isStringsEqual(genre.name, activeGenre)) return;\n\n    dispatch(changeActiveGenre(genre.id));\n  }, [activeGenre]);\n  return (\n    <main className=\"main content-wrapper\">\n      <Menu\n        className=\"genre-list\"\n        render={(className: string) => {\n          return genres.map((genre: IGenre) => {\n            const isActive = isStringsEqual(activeGenre, genre.name);\n            const elementClass = `${className} ${isActive ? \"menu__item--active\" : \"\"}`;\n            return <li role=\"presentation\" key={genre.id} className={elementClass} onClick={() => handleGenreClick(genre)}>{genre.name}</li>;\n          });\n        }}\n      />\n      <Content />\n    </main>\n  );\n};\n\nexport default memo(Main);\n","C:\\repos\\l1nks-movie-app\\client\\src\\mocks\\data.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\content\\content.tsx",["138","139"],"import React, {\n  memo, useCallback, useEffect, useState,\n} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Menu from \"../menu/menu\";\nimport { CONSTANT_GENRES } from \"../../constants/constants\";\nimport Search from \"../search/search\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\nimport { isStringsEqual } from \"../../utils/helpers\";\nimport { changeCategory } from \"../../redux/reducers/genre/reducer\";\nimport { TCategoryListItem } from \"../../redux/reducers/genre/types/types\";\nimport Films from \"../films/films\";\nimport Loader from \"../loader/loader\";\nimport { IClientFilmData } from \"../../redux/reducers/films/types/types\";\n\nconst Content: React.FC = () => {\n  const [filmsToShow, setFilmsToShow] = useState<Array<IClientFilmData>>([]);\n  const dispatch = useDispatch();\n  const filmCategory = useSelector((state: IRootState) => state.genres.category);\n  const activeGenre = useSelector((state: IRootState) => state.genres.active);\n  const isFilmLoading = useSelector((state: IRootState) => state.films.loading);\n  const films = useSelector((state: IRootState) => state.films.films);\n\n  const handleCategoryClick = useCallback((category: TCategoryListItem) => {\n    if (isStringsEqual(category.name, filmCategory)) return;\n    dispatch(changeCategory(category.id));\n  }, [filmCategory]);\n\n  useEffect(() => {\n    setFilmsToShow(films);\n  }, [films]);\n\n  const handleSearchInput = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.target.value === \"\") {\n      setFilmsToShow(films);\n      return;\n    }\n\n    const filterFilms = films.filter((film) => {\n      const filmTitle = film.title.toLowerCase();\n\n      return filmTitle.indexOf(evt.target.value.toLowerCase()) !== -1;\n    });\n\n    setFilmsToShow(filterFilms);\n  }, [films]);\n  return (\n    <div className=\"content\">\n      <div className=\"content__header\">\n        {\n          activeGenre === \"All\"\n          && (\n          <Menu\n            direction=\"row\"\n            render={(className: string) => {\n              return CONSTANT_GENRES.map((movie: any) => {\n                const isActive = isStringsEqual(movie.name, filmCategory);\n                const elementClass = `${className} ${isActive ? \"menu__item--active\" : \"\"}`;\n                return <li role=\"presentation\" className={elementClass} key={movie.id} onClick={() => handleCategoryClick(movie)}>{movie.name}</li>;\n              });\n            }}\n          />\n          )\n        }\n        <Search className=\"content__search\" callback={handleSearchInput} />\n      </div>\n      <div className=\"content__films\">\n        { isFilmLoading ? <Loader /> : <Films films={filmsToShow} />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Content);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\search\\search.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\loader\\loader.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\store.ts",["140","141"],"import {\n  configureStore, Action, getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas/sagas\";\n\nimport rootReducer, { RootState } from \"./reducers/rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware({ thunk: false }), sagaMiddleware],\n});\n\nexport type AppDispatch = typeof store.dispatch;\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\rootReducer.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\reducer.ts",["142"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\n\nimport { IGenres, TCategoryListItem } from \"./types/types\";\n\nconst categoryList: Array<TCategoryListItem> = [\n  {\n    id: 6542,\n    name: \"Now playing\",\n  },\n  {\n    id: 5655,\n    name: \"Popular\",\n  },\n  {\n    id: 6571,\n    name: \"Top Rated\",\n  },\n  {\n    id: 7823,\n    name: \"Upcoming\",\n  },\n];\n\nconst initialState: IGenres = {\n  loading: false,\n  error: false,\n  list: [{\n    id: 63467,\n    name: \"All\",\n  }],\n  active: \"All\",\n  category: \"Now playing\", // катерогии фильмов при выборе жанра All\n  categoryList,\n};\n\nconst genreSlice = createSlice({\n  name: \"genres\",\n  initialState,\n  reducers: {\n    getGenresRequest(state: IGenres): void {\n      state.loading = true;\n      state.error = false;\n    },\n    getGenresSuccess(state: IGenres, action: PayloadAction<Array<IGenres>>): void {\n      const newGenres = [...current(state.list)]; // берем текущий массив жанров\n      action.payload.forEach((element: any) => { // добавляем жанры с api\n        newGenres.push(element);\n      });\n      state.loading = false;\n      state.list = newGenres;\n    },\n    getGenresError(state): void {\n      state.error = true;\n      state.loading = false;\n    },\n    changeActiveGenre(state, action: PayloadAction<number>): void {\n      const idx = current(state.list).findIndex((element) => element.id === action.payload);\n      state.active = current(state.list)[idx].name;\n    },\n    changeCategory(state, action: PayloadAction<number>): void {\n      const idx = current(state.categoryList).findIndex((element) => element.id === action.payload);\n      state.category = current(state.categoryList)[idx].name;\n    },\n  },\n});\n\nexport const {\n  getGenresRequest, getGenresSuccess, changeActiveGenre, changeCategory,\n} = genreSlice.actions;\n\nexport default genreSlice.reducer;\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\sagas\\sagas.ts",["143"],"import { all } from \"redux-saga/effects\";\nimport watchGenreSaga from \"../reducers/genre/saga/saga\";\nimport watchFilmsSaga from \"../reducers/films/saga/saga\";\n\nexport default function* rootSaga() {\n  yield all([\n    watchGenreSaga(),\n    watchFilmsSaga(),\n  ]);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\saga\\saga.ts",["144","145"],"import { put, call, takeEvery } from \"redux-saga/effects\";\nimport { getGenresRequest, getGenresSuccess } from \"../reducer\";\nimport api from \"../../../../services/api\";\n\nfunction* getGenres() {\n  try {\n    const response = yield call(api.getGenres);\n    yield put(getGenresSuccess(response.data.genres));\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\nexport default function* watchGenreSaga() {\n  yield takeEvery(getGenresRequest.type, getGenres);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\services\\api.ts",["146","147","148"],"import axios, { AxiosInstance } from \"axios\";\nimport dotenv from \"dotenv\";\nimport { BASE_URL } from \"../constants/constants\";\n\ndotenv.config();\nclass Api {\n  private token: string | undefined;\n\n  private url: string;\n\n  client: AxiosInstance | null;\n\n  constructor(url: string, token: string | undefined) {\n    this.token = token;\n    this.client = null;\n    this.url = url;\n  }\n\n  init = () => {\n    const headers: any = {\n      Accept: \"application/json\",\n    };\n\n    if (this.token) {\n      headers.Authorization = `Bearer ${this.token}`;\n    }\n\n    this.client = axios.create({\n      baseURL: this.url,\n      timeout: 31000,\n      withCredentials: false,\n      headers,\n    });\n\n    return this.client;\n  };\n\n  getGenres = (params = {}) => {\n    return this.init().get(\"/genre/movie/list\");\n  };\n\n  getFilms = (type: string) => {\n    return this.init().get(`/movie/${type}`);\n  };\n\n  discoverFilms = () => {\n    return this.init().get(\"/discover/movie\", {\n      params: {\n        with_genres: 28,\n      },\n    });\n  };\n}\n\nexport default new Api(\n  BASE_URL,\n  process.env.REACT_APP_API_TOKEN,\n);\n","C:\\repos\\l1nks-movie-app\\client\\src\\constants\\constants.ts",["149"],"export const RoutePathes = {\n  ROOT: \"/\",\n  MOVIES: \"/movies\",\n};\n\nexport const CONSTANT_GENRES = [\n  {\n    id: 6542,\n    name: \"Now playing\",\n  },\n  {\n    id: 5655,\n    name: \"Popular\",\n  },\n  {\n    id: 6571,\n    name: \"Top Rated\",\n  },\n  {\n    id: 7823,\n    name: \"Upcoming\",\n  },\n];\n\n// список жанров для получения данных с сервера\nexport const GENRES_TYPES_TO_SERVER = {\n  [CONSTANT_GENRES[0].name]: \"now_playing\",\n  [CONSTANT_GENRES[1].name]: \"popular\",\n  [CONSTANT_GENRES[2].name]: \"top_rated\",\n  [CONSTANT_GENRES[3].name]: \"upcoming\",\n};\n\nconst CORS_URL = \"https://cors-anywhere.herokuapp.com/\";\n\nexport const imageUrl = \"https://image.tmdb.org/t/p/w342/\";\n\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\n","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\helpers.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\popup\\popup.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\loginForm\\loginForm.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\user\\reducer.ts",["150"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\nimport { IInitialUserState } from \"./types/types\";\n\nconst initialState: IInitialUserState = {\n  isLogin: false,\n  data: null,\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setLoginStatus(state: IInitialUserState, action: PayloadAction<boolean>): void {\n      state.isLogin = action.payload;\n    },\n  },\n});\n\nexport const { setLoginStatus } = userSlice.actions;\n\nexport default userSlice.reducer;\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\reducer.ts",["151","152"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\nimport { IClientFilmData } from \"./types/types\";\n\nexport interface IFilmState {\n  films: Array<IClientFilmData>,\n  loading: boolean,\n  error: boolean\n}\n\nconst initialState: IFilmState = {\n  films: [],\n  loading: false,\n  error: false,\n};\n\nconst filmsSlice = createSlice({\n  name: \"films\",\n  initialState,\n  reducers: {\n    getFilmsRequest(state) {\n      state.loading = true;\n      state.error = false;\n    },\n    getFilmsSuccess(state, action) {\n      state.loading = false;\n      state.films = action.payload;\n    },\n  },\n});\n\nexport const { getFilmsRequest, getFilmsSuccess } = filmsSlice.actions;\n\nexport default filmsSlice.reducer;\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\saga\\saga.ts",["153","154","155"],"import {\n  put, call, takeEvery, select,\n} from \"redux-saga/effects\";\nimport { getFilmsRequest, getFilmsSuccess } from \"../reducer\";\nimport { changeCategory, changeActiveGenre } from \"../../genre/reducer\";\nimport { IRootState } from \"../../types/types\";\nimport { GENRES_TYPES_TO_SERVER } from \"../../../../constants/constants\";\nimport api from \"../../../../services/api\";\nimport FilmAdapter from \"../utils/filmAdapter\";\nimport { isStringsEqual } from \"../../../../utils/helpers\";\n\nconst getActiveCategory = (state: IRootState) => state.genres.category;\nconst getActiveGenre = (state: IRootState) => state.genres.active;\nconst getActiveGenreId = (state: IRootState) => {\n  const allGenres = state.genres.list;\n  const activeGenre = state.genres.active;\n  const idx = allGenres.findIndex((genre) => isStringsEqual(genre.name, activeGenre));\n\n  return allGenres[idx].id;\n};\n\n// Генератор для запуска обновления фильмов, если изменился жанр\nfunction* getFilmsWhenGenreUpdated() {\n  try {\n    yield put(getFilmsRequest());\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\nfunction* getFilms() {\n  try {\n    let response;\n    const activeGenre = yield select(getActiveGenre);\n    if (isStringsEqual(activeGenre, \"all\")) {\n      const activeCategory = yield select(getActiveCategory);\n      response = yield call(api.getFilms, GENRES_TYPES_TO_SERVER[activeCategory]);\n    } else {\n      const activeGenreId = yield select(getActiveGenreId);\n      response = yield call(api.discoverFilms, { with_genres: activeGenreId });\n    }\n    yield put(getFilmsSuccess(FilmAdapter.transformData(response.data.results)));\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\nexport default function* watchFilmsSaga() {\n  yield takeEvery(getFilmsRequest.type, getFilms);\n  yield takeEvery(changeCategory.type, getFilmsWhenGenreUpdated);\n  yield takeEvery(changeActiveGenre.type, getFilmsWhenGenreUpdated);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\utils\\filmAdapter.ts",["156","157"],"import { IServerFilmData } from \"../types/types\";\n\nexport default class FilmAdapter {\n  static transformElement(element: IServerFilmData) {\n    return {\n      adult: element.adult,\n      backdropPath: element.backdrop_path,\n      genreIds: element.genre_ids,\n      id: element.id,\n      originalLanguage: element.original_language,\n      originalTitle: element.original_title,\n      overview: element.overview,\n      popularity: element.popularity,\n      posterPath: element.poster_path,\n      releaseDate: element.release_date,\n      title: element.title,\n      video: element.video,\n      voteAverage: element.vote_average,\n      voteCount: element.vote_count,\n    };\n  }\n\n  static transformData(data: Array<IServerFilmData>) {\n    return data.map(this.transformElement);\n  }\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\films\\films.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-card\\film-card.tsx",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":17,"column":6,"nodeType":"174","endLine":17,"endColumn":8,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":33,"column":6,"nodeType":"174","endLine":33,"endColumn":8,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":25,"column":9,"nodeType":"180","messageId":"181","endLine":25,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":44,"column":23,"nodeType":"184","messageId":"185","endLine":44,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":49,"column":23,"nodeType":"184","messageId":"185","endLine":49,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":59,"column":11,"nodeType":"184","messageId":"185","endLine":59,"endColumn":22},{"ruleId":"172","severity":1,"message":"186","line":118,"column":6,"nodeType":"174","endLine":118,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":5,"column":12,"nodeType":"190","messageId":"191","endLine":5,"endColumn":15,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"193","line":19,"column":6,"nodeType":"174","endLine":19,"endColumn":19,"suggestions":"194"},{"ruleId":"172","severity":1,"message":"193","line":27,"column":6,"nodeType":"174","endLine":27,"endColumn":20,"suggestions":"195"},{"ruleId":"188","severity":1,"message":"189","line":56,"column":50,"nodeType":"190","messageId":"191","endLine":56,"endColumn":53,"suggestions":"196"},{"ruleId":"178","severity":1,"message":"197","line":2,"column":19,"nodeType":"180","messageId":"181","endLine":2,"endColumn":25},{"ruleId":"178","severity":1,"message":"198","line":7,"column":23,"nodeType":"180","messageId":"181","endLine":7,"endColumn":32},{"ruleId":"188","severity":1,"message":"189","line":46,"column":40,"nodeType":"190","messageId":"191","endLine":46,"endColumn":43,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":5,"column":16,"nodeType":"202","messageId":"203","endLine":5,"endColumn":36},{"ruleId":"182","severity":1,"message":"183","line":10,"column":11,"nodeType":"184","messageId":"185","endLine":10,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":14,"column":16,"nodeType":"202","messageId":"203","endLine":14,"endColumn":42},{"ruleId":"188","severity":1,"message":"189","line":20,"column":20,"nodeType":"190","messageId":"191","endLine":20,"endColumn":23,"suggestions":"204"},{"ruleId":"178","severity":1,"message":"205","line":38,"column":16,"nodeType":"180","messageId":"181","endLine":38,"endColumn":22},{"ruleId":"178","severity":1,"message":"206","line":46,"column":20,"nodeType":"180","messageId":"181","endLine":46,"endColumn":34},{"ruleId":"178","severity":1,"message":"207","line":33,"column":7,"nodeType":"180","messageId":"181","endLine":33,"endColumn":15},{"ruleId":"178","severity":1,"message":"208","line":1,"column":38,"nodeType":"180","messageId":"181","endLine":1,"endColumn":45},{"ruleId":"178","severity":1,"message":"209","line":1,"column":23,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"178","severity":1,"message":"208","line":1,"column":38,"nodeType":"180","messageId":"181","endLine":1,"endColumn":45},{"ruleId":"182","severity":1,"message":"183","line":27,"column":11,"nodeType":"184","messageId":"185","endLine":27,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":44,"column":11,"nodeType":"184","messageId":"185","endLine":44,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":48,"column":16,"nodeType":"202","messageId":"203","endLine":48,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":4,"column":3,"nodeType":"210","messageId":"203","endLine":4,"endColumn":52},{"ruleId":"200","severity":1,"message":"201","line":23,"column":3,"nodeType":"210","messageId":"203","endLine":23,"endColumn":53},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["211"],"no-spaced-func",["212"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'isFilmsLoading' and 'isGenreLoading'. Either include them or remove the dependency array.","ArrayExpression",["213"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["214"],"@typescript-eslint/no-unused-vars","'loginForm' is assigned a value but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","React Hook useMemo has a missing dependency: 'userMenuActions'. Either include it or remove the dependency array.",["215"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["216","217"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["218"],["219"],["220","221"],"'Action' is defined but never used.","'RootState' is defined but never used.",["222","223"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType",["224","225"],"'params' is assigned a value but never used.","'params' is defined but never used.","'CORS_URL' is assigned a value but never used.","'current' is defined but never used.","'PayloadAction' is defined but never used.","FunctionExpression","padding-line-between-statements","func-call-spacing",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"messageId":"232","fix":"233","desc":"234"},{"messageId":"235","fix":"236","desc":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"messageId":"232","fix":"242","desc":"234"},{"messageId":"235","fix":"243","desc":"237"},{"messageId":"232","fix":"244","desc":"234"},{"messageId":"235","fix":"245","desc":"237"},{"messageId":"232","fix":"246","desc":"234"},{"messageId":"235","fix":"247","desc":"237"},"Update the dependencies array to be: [isFilmsLoading, isGenreLoading]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch]",{"range":"250","text":"251"},"Update the dependencies array to be: [userMenuActions]",{"range":"252","text":"253"},"suggestUnknown",{"range":"254","text":"255"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"254","text":"256"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [activeGenre, dispatch]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, filmCategory]",{"range":"259","text":"260"},{"range":"261","text":"255"},{"range":"261","text":"256"},{"range":"262","text":"255"},{"range":"262","text":"256"},{"range":"263","text":"255"},{"range":"263","text":"256"},[858,860],"[isFilmsLoading, isGenreLoading]",[1366,1368],"[dispatch]",[3126,3128],"[userMenuActions]",[136,139],"unknown","never",[819,832],"[activeGenre, dispatch]",[1321,1335],"[dispatch, filmCategory]",[2079,2082],[983,986],[416,419]]