[{"C:\\repos\\l1nks-movie-app\\client\\src\\index.tsx":"1","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\history.ts":"2","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\store.ts":"3","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\app.tsx":"4","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\sagas\\sagas.ts":"5","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\rootReducer.ts":"6","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\reducer.ts":"7","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\reducer.ts":"8","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\user\\reducer.ts":"9","C:\\repos\\l1nks-movie-app\\client\\src\\components\\header\\header.tsx":"10","C:\\repos\\l1nks-movie-app\\client\\src\\components\\main\\main.tsx":"11","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loader\\loader.tsx":"12","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\saga\\saga.ts":"13","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\saga\\saga.ts":"14","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\helpers.ts":"15","C:\\repos\\l1nks-movie-app\\client\\src\\components\\menu\\menu.tsx":"16","C:\\repos\\l1nks-movie-app\\client\\src\\components\\popup\\popup.tsx":"17","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loginForm\\loginForm.tsx":"18","C:\\repos\\l1nks-movie-app\\client\\src\\components\\content\\content.tsx":"19","C:\\repos\\l1nks-movie-app\\client\\src\\services\\api.ts":"20","C:\\repos\\l1nks-movie-app\\client\\src\\constants\\constants.ts":"21","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\utils\\filmAdapter.ts":"22","C:\\repos\\l1nks-movie-app\\client\\src\\components\\films\\films.tsx":"23","C:\\repos\\l1nks-movie-app\\client\\src\\components\\search\\search.tsx":"24","C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-card\\film-card.tsx":"25","C:\\repos\\l1nks-movie-app\\client\\src\\components\\registerForm\\registerForm.tsx":"26","C:\\repos\\l1nks-movie-app\\client\\src\\routes\\routes.tsx":"27","C:\\repos\\l1nks-movie-app\\client\\src\\components\\error\\error.tsx":"28","C:\\repos\\l1nks-movie-app\\client\\src\\components\\not-found\\not-found.tsx":"29","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\app\\reduser.ts":"30","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\selectors\\selectors.ts":"31","C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-details\\film-details.tsx":"32","C:\\repos\\l1nks-movie-app\\client\\src\\routes\\content.tsx":"33"},{"size":496,"mtime":1610746810629,"results":"34","hashOfConfig":"35"},{"size":114,"mtime":1609703378370,"results":"36","hashOfConfig":"35"},{"size":520,"mtime":1609772190043,"results":"37","hashOfConfig":"35"},{"size":2118,"mtime":1611060063378,"results":"38","hashOfConfig":"35"},{"size":263,"mtime":1610638921984,"results":"39","hashOfConfig":"35"},{"size":359,"mtime":1610834976270,"results":"40","hashOfConfig":"35"},{"size":1435,"mtime":1611178877043,"results":"41","hashOfConfig":"35"},{"size":1649,"mtime":1611050496566,"results":"42","hashOfConfig":"35"},{"size":1407,"mtime":1610834983876,"results":"43","hashOfConfig":"35"},{"size":3930,"mtime":1611405507412,"results":"44","hashOfConfig":"35"},{"size":1424,"mtime":1611051452713,"results":"45","hashOfConfig":"35"},{"size":401,"mtime":1609772190042,"results":"46","hashOfConfig":"35"},{"size":792,"mtime":1611056447842,"results":"47","hashOfConfig":"35"},{"size":3264,"mtime":1611138847496,"results":"48","hashOfConfig":"35"},{"size":363,"mtime":1610638921984,"results":"49","hashOfConfig":"35"},{"size":596,"mtime":1609703370883,"results":"50","hashOfConfig":"35"},{"size":933,"mtime":1611407863491,"results":"51","hashOfConfig":"35"},{"size":2591,"mtime":1611408710268,"results":"52","hashOfConfig":"35"},{"size":3810,"mtime":1611316392127,"results":"53","hashOfConfig":"35"},{"size":1284,"mtime":1611350986548,"results":"54","hashOfConfig":"35"},{"size":1206,"mtime":1611403373233,"results":"55","hashOfConfig":"35"},{"size":1529,"mtime":1611402430759,"results":"56","hashOfConfig":"35"},{"size":1823,"mtime":1611402584074,"results":"57","hashOfConfig":"35"},{"size":678,"mtime":1611299844755,"results":"58","hashOfConfig":"35"},{"size":1806,"mtime":1611403405396,"results":"59","hashOfConfig":"35"},{"size":2733,"mtime":1611408734427,"results":"60","hashOfConfig":"35"},{"size":605,"mtime":1611060954231,"results":"61","hashOfConfig":"35"},{"size":147,"mtime":1610747430973,"results":"62","hashOfConfig":"35"},{"size":149,"mtime":1610747653474,"results":"63","hashOfConfig":"35"},{"size":394,"mtime":1610834950544,"results":"64","hashOfConfig":"35"},{"size":505,"mtime":1611051233938,"results":"65","hashOfConfig":"35"},{"size":1946,"mtime":1611406766215,"results":"66","hashOfConfig":"35"},{"size":558,"mtime":1611318070296,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1oio6kb",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"71"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"71"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"71"},"C:\\repos\\l1nks-movie-app\\client\\src\\index.tsx",["149"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/app/app\";\nimport history from \"./utils/history\";\n\nimport store from \"./redux/store\";\nimport \"./style/style.scss\";\nimport { AppRoutes } from \"./routes/routes\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <AppRoutes />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n",["150","151","152","153","154","155","156"],"C:\\repos\\l1nks-movie-app\\client\\src\\utils\\history.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\store.ts",["157","158"],"import {\n  configureStore, Action, getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas/sagas\";\n\nimport rootReducer, { RootState } from \"./reducers/rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware({ thunk: false }), sagaMiddleware],\n});\n\nexport type AppDispatch = typeof store.dispatch;\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\app.tsx",["159","160","161","162"],"import React, { memo, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"../header/header\";\nimport Main from \"../main/main\";\nimport Loader from \"../loader/loader\";\nimport { getGenresRequest } from \"../../redux/reducers/genre/reducer\";\nimport {\n  getUserDataRequest, getUserDataSuccess,\n} from \"../../redux/reducers/user/reducer\";\nimport { getFilmsRequest } from \"../../redux/reducers/films/reducer\";\nimport { ENDPOINTS } from \"../../constants/constants\";\nimport { isFetchingDone } from \"./selectors/selectors\";\nimport { ContentRoutes } from \"../../routes/test\";\n\nconst App: React.FC = () => {\n  const [isUserAuthChecked, setUserAuthStatus] = useState(false);\n  const dispatch = useDispatch();\n  const isDataLoaded = useSelector(isFetchingDone);\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      dispatch(getUserDataRequest()); // загружаем информацию о пользователе\n      try {\n        const response = await axios.get(ENDPOINTS.checkToken);\n        if (response.status === 200) {\n          const { username, email, id } = response.data;\n          dispatch(getUserDataSuccess({ username, email, id }));\n        }\n      } catch (e) {\n        console.log(\"Ошибка при загрузке\", e);\n      } finally {\n        setUserAuthStatus(true);\n      }\n    };\n    dispatch(getGenresRequest()); // загружаем жанры\n    dispatch(getFilmsRequest()); // Загружаем фильмы\n    checkAuthStatus(); // проверяем статус авторизацияя\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {\n        // Проверяем, что данные загрузились с сервера и информация о пользователе получена\n        isDataLoaded && isUserAuthChecked\n          ? (\n            <>\n              <Header />\n              <ContentRoutes />\n            </>\n          )\n          : <Loader />\n      }\n    </div>\n  );\n};\n\nexport default memo(App);\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\sagas\\sagas.ts",["163"],"import { all } from \"redux-saga/effects\";\nimport watchGenreSaga from \"../reducers/genre/saga/saga\";\nimport watchFilmsSaga from \"../reducers/films/saga/saga\";\n\nexport default function* rootSaga() {\n  yield all([\n    watchGenreSaga(),\n    watchFilmsSaga(),\n  ]);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\rootReducer.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\reducer.ts",["164","165"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\nimport { IClientFilmData } from \"./types/types\";\n\nexport interface IFilmState {\n  films: Array<IClientFilmData>,\n  loading: boolean,\n  error: boolean\n  page: number,\n  totalPages: number,\n  loadingAdditionFilms: boolean,\n  isSearching: boolean\n}\n\nconst initialState: IFilmState = {\n  films: [],\n  loading: false,\n  error: false,\n  page: 1,\n  totalPages: 1,\n  loadingAdditionFilms: false,\n  isSearching: false,\n};\n\nconst filmsSlice = createSlice({\n  name: \"films\",\n  initialState,\n  reducers: {\n    getFilmsRequest(state) {\n      return { ...state, loading: true, error: false };\n    },\n    getFilmsSuccess(state, action) {\n      const { totalPages, page, films } = action.payload;\n      return {\n        ...state, loading: false, films, page, totalPages,\n      };\n    },\n    loadAdditionFilmsRequest(state) {\n      return { ...state, loadingAdditionFilms: true };\n    },\n    loadAdditionFilmsSuccess(state, action) {\n      return {\n        ...state, films: [...state.films, ...action.payload.films], page: state.page + 1, loadingAdditionFilms: false,\n      };\n    },\n    changeSearchStatus(state, action) {\n      return { ...state, isSearching: action.payload };\n    },\n  },\n});\n\nexport const {\n  getFilmsRequest, getFilmsSuccess, loadAdditionFilmsSuccess, loadAdditionFilmsRequest, changeSearchStatus,\n} = filmsSlice.actions;\n\nexport default filmsSlice.reducer;\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\reducer.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\user\\reducer.ts",["166"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\nimport { IInitialUserState, TUserData } from \"./types/types\";\n\nconst defaultUserData = {\n  username: \"\",\n  email: \"\",\n  id: \"\",\n};\n\nconst initialState: IInitialUserState = {\n  isLogin: false,\n  loading: false,\n  data: defaultUserData,\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getUserDataRequest(state: IInitialUserState) {\n      return { ...state, loading: true };\n    },\n    getUserDataSuccess(state: IInitialUserState, action: PayloadAction<TUserData>) {\n      return {\n        ...state, loading: false, isLogin: true, data: action.payload,\n      };\n    },\n    setUserData(state: IInitialUserState, action: PayloadAction<TUserData>): void {\n      state.data = action.payload;\n      state.isLogin = true;\n    },\n    // Возможно можно сделать проще через setUserData и передачу пустого экшена\n    setUserDataToDefault(state: IInitialUserState): void {\n      state.data = defaultUserData;\n      state.isLogin = false;\n    },\n    setLoginStatus(state: IInitialUserState, action: PayloadAction<boolean>) {\n      return { ...state, isLogin: action.payload };\n    },\n  },\n});\n\nexport const {\n  setUserData, setUserDataToDefault, setLoginStatus, getUserDataRequest, getUserDataSuccess,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\header\\header.tsx",["167","168","169","170"],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\main\\main.tsx",["171"],"import React, { memo, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Menu from \"../menu/menu\";\nimport Content from \"../content/content\";\nimport { isStringsEqual } from \"../../utils/helpers\";\nimport { TGenre } from \"../../redux/reducers/genre/types/types\";\nimport { changeActiveGenre } from \"../../redux/reducers/genre/reducer\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\n\nconst Main: React.FC = () => {\n  const dispatch = useDispatch();\n  const genres = useSelector((state: IRootState) => state.genres.list);\n  const activeGenre = useSelector((state: IRootState) => state.genres.active);\n\n  const handleGenreClick = useCallback((genre: TGenre) => {\n    if (isStringsEqual(genre.name, activeGenre)) return;\n\n    dispatch(changeActiveGenre(genre.id));\n  }, [activeGenre]);\n  return (\n    <main className=\"main content-wrapper\">\n      <Menu\n        className=\"genre-list\"\n        render={(className: string) => {\n          return genres.map((genre: TGenre) => {\n            const isActive = isStringsEqual(activeGenre, genre.name);\n            const elementClass = `${className} ${isActive ? \"menu__item--active\" : \"\"}`;\n            return <li role=\"presentation\" key={genre.id} className={elementClass} onClick={() => handleGenreClick(genre)}>{genre.name}</li>;\n          });\n        }}\n      />\n      <Content />\n    </main>\n  );\n};\n\nexport default memo(Main);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\loader\\loader.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\genre\\saga\\saga.ts",["172"],"import { put, call, takeEvery } from \"redux-saga/effects\";\nimport { getGenresRequest, getGenresSuccess, getGenresError } from \"../reducer\";\nimport api from \"../../../../services/api\";\nimport { GENRE_TYPE_ALL, RoutePathes } from \"../../../../constants/constants\";\nimport history from \"../../../../utils/history\";\n\nfunction* getGenres() {\n  try {\n    const response = yield call(api.getGenres);\n    // добавляем жанры с сервера + константное значение для всех фильмов\n    yield put(getGenresSuccess([...GENRE_TYPE_ALL, ...response.data.genres]));\n  } catch (e) {\n    yield put(getGenresError());\n    history.push(RoutePathes.ERROR);\n  }\n}\n\nexport default function* watchGenreSaga() {\n  yield takeEvery(getGenresRequest.type, getGenres);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\saga\\saga.ts",["173","174","175","176"],"import {\n  put, call, takeEvery, select,\n} from \"redux-saga/effects\";\nimport {\n  getFilmsRequest, getFilmsSuccess, loadAdditionFilmsSuccess, loadAdditionFilmsRequest,\n} from \"../reducer\";\nimport { changeCategory, changeActiveGenre } from \"../../genre/reducer\";\nimport { IRootState } from \"../../types/types\";\nimport { GENRES_TYPES_TO_SERVER } from \"../../../../constants/constants\";\nimport api from \"../../../../services/api\";\nimport FilmAdapter from \"../utils/filmAdapter\";\nimport { isStringsEqual } from \"../../../../utils/helpers\";\n\nconst getActiveCategory = (state: IRootState) => state.genres.category;\nconst getActiveGenre = (state: IRootState) => state.genres.active;\nconst getActiveGenreId = (state: IRootState) => {\n  const allGenres = state.genres.list;\n  const activeGenre = state.genres.active;\n  const idx = allGenres.findIndex((genre) => isStringsEqual(genre.name, activeGenre));\n\n  return allGenres[idx].id;\n};\n\nconst getTotalPages = (state: IRootState) => state.films.totalPages;\nconst getCurrentPage = (state: IRootState) => state.films.page;\n\n// Сага для запуска обновления фильмов, если изменился жанр\nfunction* getFilmsWhenGenreUpdated() {\n  try {\n    yield put(getFilmsRequest());\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\n// Сага для загрузки большего количество фильмов\nfunction* getAdditionFilms() {\n  try {\n    let response;\n    const totalPages = yield select(getTotalPages);\n    const currentPage = yield select(getCurrentPage);\n    const activeGenre = yield select(getActiveGenre);\n\n    if (currentPage + 1 <= totalPages) {\n      if (isStringsEqual(activeGenre, \"all\")) {\n        const activeCategory = yield select(getActiveCategory);\n        response = yield call(api.getFilms, GENRES_TYPES_TO_SERVER[activeCategory], {\n          page: currentPage + 1,\n        });\n      } else {\n        const activeGenreId = yield select(getActiveGenreId);\n        response = yield call(api.discoverFilms, { with_genres: activeGenreId, page: currentPage + 1 });\n      }\n      yield put(loadAdditionFilmsSuccess({\n        films: FilmAdapter.transformData(response.data.results),\n      }));\n    }\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\nfunction* getFilms() {\n  try {\n    let response;\n    const activeGenre = yield select(getActiveGenre);\n    if (isStringsEqual(activeGenre, \"all\")) {\n      const activeCategory = yield select(getActiveCategory);\n      response = yield call(api.getFilms, GENRES_TYPES_TO_SERVER[activeCategory]);\n    } else {\n      const activeGenreId = yield select(getActiveGenreId);\n      response = yield call(api.discoverFilms, { with_genres: activeGenreId });\n    }\n    yield put(getFilmsSuccess({\n      films: FilmAdapter.transformData(response.data.results),\n      page: response.data.page,\n      totalPages: response.data.total_pages,\n    }));\n  } catch (e) {\n    yield console.log(\"error\", e);\n  }\n}\n\nexport default function* watchFilmsSaga() {\n  yield takeEvery(getFilmsRequest.type, getFilms);\n  yield takeEvery(changeCategory.type, getFilmsWhenGenreUpdated);\n  yield takeEvery(changeActiveGenre.type, getFilmsWhenGenreUpdated);\n  yield takeEvery(loadAdditionFilmsRequest.type, getAdditionFilms);\n}\n","C:\\repos\\l1nks-movie-app\\client\\src\\utils\\helpers.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\menu\\menu.tsx",["177"],"import React, { memo } from \"react\";\n\ninterface IMenuListProps {\n  className?: string; // класс для родительского компонента\n  render?: any;\n  direction?: string;\n}\n\nconst Menu: React.FC<IMenuListProps> = ({\n  className, render, direction,\n}: IMenuListProps) => {\n  return (\n    <nav className={`menu ${className}`}>\n      <ul className={`menu__list ${direction && \"menu__list--row\"}`}>\n        {render(\"menu__item\")}\n      </ul>\n    </nav>\n  );\n};\n\nMenu.defaultProps = {\n  className: \"\",\n  render: () => <li>1</li>,\n  direction: \"\",\n};\n\nexport default memo(Menu);\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\popup\\popup.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\loginForm\\loginForm.tsx",["178","179"],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\content\\content.tsx",["180","181","182","183"],"import React, {\n  memo, useCallback, useEffect, useState, useRef,\n} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport debounce from \"lodash.debounce\";\nimport Menu from \"../menu/menu\";\nimport { CONSTANT_GENRES } from \"../../constants/constants\";\nimport Search from \"../search/search\";\nimport { IRootState } from \"../../redux/reducers/types/types\";\nimport { isStringsEqual } from \"../../utils/helpers\";\nimport { changeCategory } from \"../../redux/reducers/genre/reducer\";\nimport { TCategoryListItem } from \"../../redux/reducers/genre/types/types\";\nimport Films from \"../films/films\";\nimport Loader from \"../loader/loader\";\nimport { IClientFilmData } from \"../../redux/reducers/films/types/types\";\nimport { changeSearchStatus } from \"../../redux/reducers/films/reducer\";\n\nconst Content: React.FC = () => {\n  const [filmsToShow, setFilmsToShow] = useState<Array<IClientFilmData>>([]);\n  const dispatch = useDispatch();\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const filmCategory = useSelector((state: IRootState) => state.genres.category);\n  const activeGenre = useSelector((state: IRootState) => state.genres.active);\n  const genreCategory = useSelector((state: IRootState) => state.genres.category);\n  const isFilmLoading = useSelector((state: IRootState) => state.films.loading);\n  const isSearching = useSelector((state: IRootState) => state.films.isSearching);\n  const films = useSelector((state: IRootState) => state.films.films);\n\n  const handleCategoryClick = useCallback((category: TCategoryListItem) => {\n    if (isStringsEqual(category.name, filmCategory)) return;\n    dispatch(changeCategory(category.id));\n  }, [filmCategory]);\n\n  useEffect(() => {\n    setFilmsToShow(films);\n    // Если обновились фильмы, чистим строку поиска\n    if (searchInputRef?.current) {\n      dispatch(changeSearchStatus(false));\n    }\n  }, [films]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [activeGenre, genreCategory]);\n\n  // Используем debounce, чтобы не вызывать каждый поиск фильмов при вводе текста в строку поиска\n  const handleSearchInput = useCallback(debounce((evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.target.value === \"\") {\n      setFilmsToShow(films);\n      dispatch(changeSearchStatus(false));\n      return;\n    }\n\n    const filterFilms = films.filter((film) => {\n      const filmTitle = film.title.toLowerCase();\n\n      return filmTitle.indexOf(evt.target.value.toLowerCase()) !== -1;\n    });\n\n    setFilmsToShow(filterFilms);\n\n    // Если находимся в поиске, то выходим из функции, либо диспатчим значение true\n    if (isSearching) return;\n    dispatch(changeSearchStatus(true));\n  }, 500), [films, isSearching]);\n  return (\n    <div className=\"content\">\n      <div className=\"content__header\">\n        {\n          activeGenre === \"All\"\n          && (\n          <Menu\n            direction=\"row\"\n            render={(className: string) => {\n              return CONSTANT_GENRES.map((movie: any) => {\n                const isActive = isStringsEqual(movie.name, filmCategory);\n                const elementClass = `${className} ${isActive ? \"menu__item--active\" : \"\"}`;\n                return <li role=\"presentation\" className={elementClass} key={movie.id} onClick={() => handleCategoryClick(movie)}>{movie.name}</li>;\n              });\n            }}\n          />\n          )\n        }\n        <Search className=\"content__search\" callback={handleSearchInput} ref={searchInputRef} />\n      </div>\n      <div className=\"content__films\">\n        { isFilmLoading ? <Loader /> : <Films films={filmsToShow} />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Content);\n","C:\\repos\\l1nks-movie-app\\client\\src\\services\\api.ts",["184","185"],"import axios, { AxiosInstance } from \"axios\";\nimport dotenv from \"dotenv\";\nimport { BASE_URL } from \"../constants/constants\";\n\ndotenv.config();\nclass Api {\n  private token: string | undefined;\n\n  private url: string;\n\n  client: AxiosInstance | null;\n\n  constructor(url: string, token: string | undefined) {\n    this.token = token;\n    this.client = null;\n    this.url = url;\n  }\n\n  init = () => {\n    const headers: any = {\n      Accept: \"application/json\",\n    };\n\n    if (this.token) {\n      headers.Authorization = `Bearer ${this.token}`;\n    }\n\n    this.client = axios.create({\n      baseURL: this.url,\n      timeout: 31000,\n      withCredentials: false,\n      headers,\n    });\n\n    return this.client;\n  };\n\n  getGenres = (params = {}) => {\n    return this.init().get(\"/genre/movie/list\");\n  };\n\n  getFilms = (type: string, params = {}) => {\n    return this.init().get(`/movie/${type}`, {\n      params,\n    });\n  };\n\n  getDetails = (id: string) => {\n    return this.init().get(`/movie/${id}`);\n  };\n\n  getReviews = (id:string) => {\n    return this.init().get(`/movie/${id}/reviews`);\n  };\n\n  discoverFilms = (params = {}) => {\n    return this.init().get(\"/discover/movie\", {\n      params,\n    });\n  };\n}\n\nexport default new Api(\n  BASE_URL,\n  process.env.REACT_APP_API_TOKEN,\n);\n","C:\\repos\\l1nks-movie-app\\client\\src\\constants\\constants.ts",["186"],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\films\\utils\\filmAdapter.ts",["187","188"],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\films\\films.tsx",["189"],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\search\\search.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-card\\film-card.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\registerForm\\registerForm.tsx",["190"],"C:\\repos\\l1nks-movie-app\\client\\src\\routes\\routes.tsx",["191"],"import {\n  Switch, Route, Redirect,\n} from \"react-router-dom\";\nimport { RoutePathes } from \"../constants/constants\";\nimport App from \"../components/app/app\";\nimport ErrorPage from \"../components/error/error\";\nimport NotFound from \"../components/not-found/not-found\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const AppRoutes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path={RoutePathes.ERROR} exact component={ErrorPage} />\n      <Route path={RoutePathes.ROOT} component={App} />\n      <Route path={RoutePathes.NOT_FOUND} component={NotFound} />\n    </Switch>\n  );\n};\n","C:\\repos\\l1nks-movie-app\\client\\src\\components\\error\\error.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\not-found\\not-found.tsx",[],"C:\\repos\\l1nks-movie-app\\client\\src\\redux\\reducers\\app\\reduser.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\app\\selectors\\selectors.ts",[],"C:\\repos\\l1nks-movie-app\\client\\src\\components\\film-details\\film-details.tsx",["192","193","194"],"C:\\repos\\l1nks-movie-app\\client\\src\\routes\\content.tsx",["195","196","197"],"import { Redirect, Route, Switch } from \"react-router-dom\";\nimport { RoutePathes } from \"../constants/constants\";\nimport FilmDetails from \"../components/film-details/film-details\";\nimport Main from \"../components/main/main\";\nimport NotFound from \"../components/not-found/not-found\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const ContentRoutes: React.FC = () => {\n  return (\n    <>\n      <Route path={`${RoutePathes.FILM_DETAILS}/:id?`} exact component={FilmDetails} />\n      <Route path=\"/\" exact component={Main} />\n    </>\n  );\n};\n",{"ruleId":"198","severity":1,"message":"199","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":11},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"198","severity":1,"message":"216","line":2,"column":19,"nodeType":"200","messageId":"201","endLine":2,"endColumn":25},{"ruleId":"198","severity":1,"message":"217","line":7,"column":23,"nodeType":"200","messageId":"201","endLine":7,"endColumn":32},{"ruleId":"198","severity":1,"message":"218","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":18},{"ruleId":"198","severity":1,"message":"219","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":12},{"ruleId":"220","severity":1,"message":"221","line":32,"column":9,"nodeType":"222","messageId":"223","endLine":32,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":40,"column":6,"nodeType":"226","endLine":40,"endColumn":8,"suggestions":"227"},{"ruleId":"228","severity":1,"message":"229","line":5,"column":16,"nodeType":"230","messageId":"231","endLine":5,"endColumn":36},{"ruleId":"198","severity":1,"message":"232","line":1,"column":23,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"233","line":1,"column":38,"nodeType":"200","messageId":"201","endLine":1,"endColumn":45},{"ruleId":"198","severity":1,"message":"233","line":1,"column":38,"nodeType":"200","messageId":"201","endLine":1,"endColumn":45},{"ruleId":"220","severity":1,"message":"221","line":35,"column":23,"nodeType":"222","messageId":"223","endLine":35,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":40,"column":23,"nodeType":"222","messageId":"223","endLine":40,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":52,"column":11,"nodeType":"222","messageId":"223","endLine":52,"endColumn":22},{"ruleId":"224","severity":1,"message":"234","line":111,"column":6,"nodeType":"226","endLine":111,"endColumn":16,"suggestions":"235"},{"ruleId":"224","severity":1,"message":"236","line":19,"column":6,"nodeType":"226","endLine":19,"endColumn":19,"suggestions":"237"},{"ruleId":"228","severity":1,"message":"229","line":18,"column":16,"nodeType":"230","messageId":"231","endLine":18,"endColumn":42},{"ruleId":"220","severity":1,"message":"221","line":32,"column":11,"nodeType":"222","messageId":"223","endLine":32,"endColumn":22},{"ruleId":"220","severity":1,"message":"221","line":59,"column":11,"nodeType":"222","messageId":"223","endLine":59,"endColumn":22},{"ruleId":"220","severity":1,"message":"221","line":80,"column":11,"nodeType":"222","messageId":"223","endLine":80,"endColumn":22},{"ruleId":"228","severity":1,"message":"229","line":84,"column":16,"nodeType":"230","messageId":"231","endLine":84,"endColumn":42},{"ruleId":"238","severity":1,"message":"239","line":5,"column":12,"nodeType":"240","messageId":"241","endLine":5,"endColumn":15,"suggestions":"242"},{"ruleId":"238","severity":1,"message":"239","line":10,"column":23,"nodeType":"240","messageId":"241","endLine":10,"endColumn":26,"suggestions":"243"},{"ruleId":"220","severity":1,"message":"221","line":25,"column":5,"nodeType":"222","messageId":"223","endLine":25,"endColumn":16},{"ruleId":"224","severity":1,"message":"236","line":32,"column":6,"nodeType":"226","endLine":32,"endColumn":20,"suggestions":"244"},{"ruleId":"224","severity":1,"message":"225","line":40,"column":6,"nodeType":"226","endLine":40,"endColumn":13,"suggestions":"245"},{"ruleId":"224","severity":1,"message":"246","line":47,"column":29,"nodeType":"200","endLine":47,"endColumn":40},{"ruleId":"238","severity":1,"message":"239","line":75,"column":50,"nodeType":"240","messageId":"241","endLine":75,"endColumn":53,"suggestions":"247"},{"ruleId":"238","severity":1,"message":"239","line":20,"column":20,"nodeType":"240","messageId":"241","endLine":20,"endColumn":23,"suggestions":"248"},{"ruleId":"198","severity":1,"message":"249","line":38,"column":16,"nodeType":"200","messageId":"201","endLine":38,"endColumn":22},{"ruleId":"198","severity":1,"message":"250","line":52,"column":7,"nodeType":"200","messageId":"201","endLine":52,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":4,"column":3,"nodeType":"251","messageId":"231","endLine":4,"endColumn":52},{"ruleId":"228","severity":1,"message":"229","line":23,"column":3,"nodeType":"251","messageId":"231","endLine":23,"endColumn":53},{"ruleId":"224","severity":1,"message":"252","line":32,"column":6,"nodeType":"226","endLine":32,"endColumn":37,"suggestions":"253"},{"ruleId":"238","severity":1,"message":"239","line":6,"column":23,"nodeType":"240","messageId":"241","endLine":6,"endColumn":26,"suggestions":"254"},{"ruleId":"198","severity":1,"message":"218","line":2,"column":18,"nodeType":"200","messageId":"201","endLine":2,"endColumn":26},{"ruleId":"220","severity":1,"message":"221","line":25,"column":7,"nodeType":"222","messageId":"223","endLine":25,"endColumn":18},{"ruleId":"224","severity":1,"message":"255","line":33,"column":6,"nodeType":"226","endLine":33,"endColumn":10,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":44,"column":15,"nodeType":"259","messageId":"223","endLine":44,"endColumn":20},{"ruleId":"198","severity":1,"message":"218","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":18},{"ruleId":"198","severity":1,"message":"260","line":1,"column":27,"nodeType":"200","messageId":"201","endLine":1,"endColumn":33},{"ruleId":"198","severity":1,"message":"261","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":16},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","jsx-a11y/accessible-emoji",[],"lines-around-directive",["262"],"no-spaced-func",["263"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'Action' is defined but never used.","'RootState' is defined but never used.","'Redirect' is defined but never used.","'Main' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["264"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'PayloadAction' is defined but never used.","'current' is defined but never used.","React Hook useMemo has a missing dependency: 'userMenuActions'. Either include it or remove the dependency array.",["265"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["266"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["267","268"],["269","270"],["271"],["272"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.",["273","274"],["275","276"],"'params' is assigned a value but never used.","'CORS_URL' is assigned a value but never used.","FunctionExpression","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["277"],["278","279"],"React Hook useEffect has a missing dependency: 'getFilmDetailsData'. Either include it or remove the dependency array.",["280"],"no-constant-condition","Unexpected constant condition.","Literal","'Switch' is defined but never used.","'NotFound' is defined but never used.","padding-line-between-statements","func-call-spacing",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"messageId":"287","fix":"288","desc":"289"},{"messageId":"290","fix":"291","desc":"292"},{"messageId":"287","fix":"293","desc":"289"},{"messageId":"290","fix":"294","desc":"292"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"messageId":"287","fix":"299","desc":"289"},{"messageId":"290","fix":"300","desc":"292"},{"messageId":"287","fix":"301","desc":"289"},{"messageId":"290","fix":"302","desc":"292"},{"desc":"303","fix":"304"},{"messageId":"287","fix":"305","desc":"289"},{"messageId":"290","fix":"306","desc":"292"},{"desc":"307","fix":"308"},"Update the dependencies array to be: [dispatch]",{"range":"309","text":"310"},"Update the dependencies array to be: [userMenuActions, userName]",{"range":"311","text":"312"},"Update the dependencies array to be: [activeGenre, dispatch]",{"range":"313","text":"314"},"suggestUnknown",{"range":"315","text":"316"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"315","text":"317"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"318","text":"316"},{"range":"318","text":"317"},"Update the dependencies array to be: [dispatch, filmCategory]",{"range":"319","text":"320"},"Update the dependencies array to be: [dispatch, films]",{"range":"321","text":"322"},{"range":"323","text":"316"},{"range":"323","text":"317"},{"range":"324","text":"316"},{"range":"324","text":"317"},"Update the dependencies array to be: [isSearching, films, isLoading, handleScroll]",{"range":"325","text":"326"},{"range":"327","text":"316"},{"range":"327","text":"317"},"Update the dependencies array to be: [getFilmDetailsData, id]",{"range":"328","text":"329"},[1565,1567],"[dispatch]",[3153,3163],"[userMenuActions, userName]",[819,832],"[activeGenre, dispatch]",[136,139],"unknown","never",[383,386],[1665,1679],"[dispatch, filmCategory]",[1871,1878],"[dispatch, films]",[2966,2969],[416,419],[1221,1252],"[isSearching, films, isLoading, handleScroll]",[183,186],[1230,1234],"[getFilmDetailsData, id]"]